{
    "id": "w1MEIGDepc",
    "title": "FlowAgent: a New Paradigm for Workflow Agent",
    "abstract": "Combining workflows with large language models (LLMs) allows LLMs to follow specific procedures, thereby extending their application to more real-world scenarios. However, incorporating workflows often compromises the flexibility of LLMs. For example in the case of Task-Oriented Dialogue (TOD), workflow atomize the function of LLM while programmatically imposing restrictions on execution path making the dialogue obstructed and less flexible when facing out-of-workflow (OOW) queries. Prompt-based methods offer soft control but sometimes fail to ensure procedure compliance. This paper introduces a new agent paradigm to address this challenge. Specifically, we first propose a novel Procedure Description Language (PDL) that integrates the flexibility of natural language and the precision of code for workflow expression. Additionally, we present a comprehensive framework that enables LLM to handle OOW queries while keeping execution safe with a series of controllers for behavioral regulation. This includes pre-decision and post-decision methods, where the dependency relationships between workflow nodes are modeled as a Directed Acyclic Graph (DAG) to validate node transitions. Beyond the primary objective of compliance considered in previous work, we introduce a new approach to evaluate the agent's flexibility in OOW situations. Experiments on three datasets demonstrate that FlowAgent not only adheres well to workflows but also responds better to OOW queries, showcasing its flexibility. Furthermore, exploration on WikiHow data confirms that the PDL effectively represents broader formats of workflow, inspiring further research on workflow-based QA tasks.",
    "keywords": [
        "workflow",
        "LLM-based agent",
        "task-oriented dialog"
    ],
    "primary_area": "applications to computer vision, audio, language, and other modalities",
    "TLDR": "",
    "creation_date": "2024-09-28",
    "original_date": "2024-10-04",
    "modification_date": "2024-10-13",
    "forum_link": "https://openreview.net/forum?id=w1MEIGDepc",
    "pdf_link": "https://openreview.net/pdf?id=w1MEIGDepc",
    "comments": [
        {
            "summary": {
                "value": "This paper introduces FlowAgent, a framework for integrating workflows into LLMs that balances procedural compliance with flexibility, addressing the limitations of existing prompt-based and rule-based methods. To achieve this, the authors propose a Procedure Description Language (PDL) that combines the natural language flexibility and programming-like precision needed for diverse workflows."
            },
            "soundness": {
                "value": 2
            },
            "presentation": {
                "value": 3
            },
            "contribution": {
                "value": 3
            },
            "strengths": {
                "value": "1. This paper defines a novel PDL to address OOW requests that agents may encounter during workflow execution. A comprehensive and unified framework like this facilitates further research in this field.\n2. The authors also introduce a new evaluation framework specifically designed to assess workflow agents' performance in OOW scenarios."
            },
            "weaknesses": {
                "value": "1. The introduction of PDL lacks thorough analysis. After observing the impacts of OOW queries, it is unclear what specific considerations led to the development of PDL. Additionally, the completeness of PDL requires further examination to demonstrate its capability to handle more complex, real-world workflows effectively.\n\n2. The evaluation of experiments is incomplete; the authors only assess GPT-4 and Qwen2-72B, with a brief note that \u201cweaker models could not handle more complex workflow tasks.\u201d However, there is no detailed analysis on what specific issues smaller models faced. Further exploration is needed to show how smaller models perform on simpler workflow tasks to provide a clearer picture of model scalability across task complexity.\n\n3. Several key details are missing, such as the hyperparameters used during LLM inference, the prompts employed during data collection, dataset construction details, and relevant examples from the datasets. Including these would improve the reproducibility and clarity of the experiments."
            },
            "questions": {
                "value": "Minor Issues:\n1. The text in Figure 4 is difficult to read, and the radar chart lacks specific performance values, making it challenging to interpret the results accurately."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 5
            },
            "confidence": {
                "value": 4
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        {
            "summary": {
                "value": "The paper creates a framework (FlowAgent) for task-oriented agents that can offer flexibility and compliance with LLMs. They propose a new language, PDL, that creates a Directed Acyclic Graph with out-of-workflow (OOW) slots, making the agent flexible and using pre- and post-controllers for compliance. They perform an extensive evaluation on augmented datasets for showing how PDL handles flexibility and compliance."
            },
            "soundness": {
                "value": 2
            },
            "presentation": {
                "value": 2
            },
            "contribution": {
                "value": 2
            },
            "strengths": {
                "value": "- The work tries to add flexibility and compliance to the conversational agents, which is a real-world challenge.\n- They experimented with three augmented datasets and showed that FlowAgent with PDL designed by humans works the best compared to NL, Code, and flowcharts created by GPT-o. \n- The writing is clear and easy to understand."
            },
            "weaknesses": {
                "value": "- The paper has several missing details, especially regarding the experimental setup. I don't think there is enough evidence to suggest that PDL works for the WikiHow case study.\n- The authors simulate users. However, as several studies have suggested, simulated users still do not capture real-world cases. The authors should have done a real-user study.\n- With PDL, as the number of tools scale, it might be difficult for the developer to define all the pre_conditions. Especially since you need to define multiple flows and the logic is non-trivial to write to cover all the cases. See question 9."
            },
            "questions": {
                "value": "1. For pass rate in turn-level evaluation, do you use an LLM to check whether the output is correct by turning it into a binary classification problem? \n2. Why do you use three types of OOW categorization? Changing their previous answers could be another scenario of OOW.\n3. I believe that the Star dataset also contains OOW scenarios; why did you add more such dialogues, and how do you generate such queries?\n4. Can you provide some stats or descriptions for your in-house dataset?\n5. It is unclear how you converted existing flows into natural language, code, and flowcharts. Who made these conversions? Xiao et al. 2024 uses GPT to convert the text into NL, code, and flowcharts, whereas you write your own PDL. I don't think the comparison is fair here.\n6. How do you construct reference sessions from tasks for turn-level evaluation using GPT-4o? Please provide more information.\n7. Can you please provide an example conversation with the simulated users? There are works that demonstrate that user simulation is non-trivial in a conversational setting. [1]\n8. Do you have any experiments with users or simulated users to suggest that PDL can handle WIKIHOW like examples?\n9. In the WIKIHOW example, what would happen if the user directly asks how to find a website's publication date using code? Since the write PDL says `if publication_date is None:` then use Google search or other tools. In this, the publication date will not be None, right? This makes me believe that you must define several \"flows\" for the PDL to work in all scenarios.\n10. Table 1 typo, for # Turn in Star turn-level row.\n11. Who add the OOW nodes to the DAG?\n12. What metric did you use to decide the flexibility and compliance score in Figure 1 (c)? What is the scale for the plot?\n\n[1] Zhou, X., Su, Z., Eisape, T., Kim, H., & Sap, M. (2024). Is this the real life? is this just fantasy? the misleading success of simulating social interactions with llms. arXiv preprint arXiv:2403.05020."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 3
            },
            "confidence": {
                "value": 5
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        {
            "summary": {
                "value": "The authors propose FlowAgent, an agent built using LLMs and incorporates workflow rules to balance between flexibility and compliance. The agent leverages both pre-decision and post-decision controllers to adjust the agent's behavior. Experimental results on existing and custom datasets show FlowAgent's superiority compared to other approaches from the literature."
            },
            "soundness": {
                "value": 2
            },
            "presentation": {
                "value": 3
            },
            "contribution": {
                "value": 3
            },
            "strengths": {
                "value": "The paper was easy to read and addresses an interesting problem in the literature that is very relevant to industry applications. The solution also seems simple to implement making it easy to adopt in use cases. The experimental section shows the benefits of the authors' proposed method."
            },
            "weaknesses": {
                "value": "The paper contains a few gaps in the both the presentation of the work and the experimental section. \n\nFirst, it is unclear how the controllers were implemented, i.e., there isn't sufficient information in the write up for one to reimplement or even have an idea of what approach was adopted. It seems that the controllers rely on deterministic syntax and logic checks but that is pure speculation on my part as the paper only has a few lines describing both pre and post decision controllers, namely focusing on their purpose as opposed to their implementation. It would be helpful if authors could either include a pseudocode of their controllers or a diagram describing their operations. \n\nSecond, the experimental section does not discuss the computational cost and additional overhead of FlowAgent compared to other approaches. Since FlowAgent operates in a conversational setting, a level of responsiveness is expected but we have no way of knowing from the paper how much overhead the added controllers are causing from both responsiveness and computational cost perspectives. It would be helpful if the authors included runtime comparisons or latency measurements between FlowAgent and the baseline approaches in their experimental results. Additionally, an analysis of how the controllers impact the overall response time in a conversational setting and the accuracy of the end to end system would be very helpful \n\nWhile figure 2 serves as the main architecture diagram describing the approach, it is very abstract. The paper could benefit from another figure showing how the controllers were working since those seem to be a key contributor. Again, I assume they rely on some sort of graph algorithm based on the DAG in figure 3 but more information is needed. Including a flowchart showing the decision-making process of the pre-decision and post-decision controllers, or a diagram illustrating how they interact with the DAG structure. This would help clarify the relationship between the controllers and the workflow representation."
            },
            "questions": {
                "value": "NA"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 5
            },
            "confidence": {
                "value": 4
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        {
            "summary": {
                "value": "The paper deals with an important topic: that of controlling the responses of an LLM based on a workflow. The authors introduce a new workflow specification language for controlling the LLMs\u2019 responses, called PDL."
            },
            "soundness": {
                "value": 2
            },
            "presentation": {
                "value": 2
            },
            "contribution": {
                "value": 2
            },
            "strengths": {
                "value": "The proposed topic is interesting and, certainly, useful. However, several issues in the presentation make it difficult to understand the contributions of this work and the limitations of the state-of-the-art. For example, the authors talk about out-of-workflow queries, however a clear definition/example of such queries is missing. \n\nAs I state at the end of comments/questions to the authors (please see below), I am willing to increase my score if the authors address my comments."
            },
            "weaknesses": {
                "value": "*Typos*\n\nSentence in line 014-015 difficult to understand. Please revise. \n\n*Presentation issues*\n\nIn the paragraph starting in line 042, the authors discuss the pros and cons of prompt-based and rule-based methods. Two comments: \n- References to prompt-based and rule-based methods are missing, making difficult for the readers to understand how the aforementioned approaches work.\n- A concrete example demonstrating the issues describe in the paragraph in lines 042--052 is missing (i.e., how the responses of a state-of-the-art prompt-based method and of a state-of-the-art rule-based method a state-of-the-art differ on a specific user question based for a given LLM). I recommend the authors adding such an example as that would help the readers understand concretely the limitations of previous work and appreciate the contributions of the proposed work.    \n\n*Related work*\n\n- A more elaborated discussion on previous work is missing. The only discussion I found is in Section 2.2. \n- Please add a discussion and conduct experiments against work on constrained-decoding using regular expressions, which I find it very relevant to this work:\n(1) \u201cGrammar-Constrained Decoding for Structured NLP Tasks without Finetuning\u201d by Sabio Geng et al. \n(2) \u201cValidating Large Language Models with Relm\u201d by Michael Kuchnik et al. \n\n*Technical questions*\n\n- How PDL differs from other workflow specification languages, not necessarily designed to support LLMs \u2013 some references for the authors to consider: \n(1) Serge Abiteboul, Pierre Bourhis, Victor Vianu. Comparing workflow specification languages: A matter of views. ACM Transactions on Database Systems, 2012, 37 (10).\n(2) W.M.P. van der Aalst and A.H.M. ter Hofstede .YAWL: yet another workflow language. Information Systems. Volume 30, Issue 4, June 2005, Pages 245-275.\n- Following up from the previous question: why cannot we use/extend existing workflow specification languages to constrain the responses of LLMs?  \n- In line 050 the author state: \u201cfor an existing rule-based workflow, if we want it to support a new demand outside the original procedure, such as helping a user check the weather (the yellow diamond in the figure), significant modifications to the original workflow are required, which becomes impractical as more out-of-workflow demands are required.\u201d How exactly PDL overcomes this crux? This should be demonstrated both via a (toy) example and via experiments.  \n- The authors say that their framework can support out-of-workflow queries, however a clear definition/example of such queries is missing, making it difficult to assess the importance of the proposed work.   \n\n*Overall assessment*\n\nA clear positioning of the contributions against the state-of-the-art is missing, making it difficult to understand the novelty of this research. I am willing to increase my score if the authors address my comments/questions."
            },
            "questions": {
                "value": "Please see my questions/comments in the above field. In particular: \n\n- Please give a concrete example from a domain of your interest (e.g., booking a hotel room) showing how prompt-based and rule-based methods from paragraph in 042--052. differ on their responses to a user query and stressing the limitation of the prior art and the contributions of this work. Please also give exact references-- there is no reference in this paragraph. \n- Please create a table or analyse the key differences between PDL and previous established workflow languages (see for example Serge Abiteboul, Pierre Bourhis, Victor Vianu. Comparing workflow specification languages: A matter of views. ACM Transactions on Database Systems, 2012, 37 (10)), particularly focusing on aspects relevant to LLM control.\n- Please provide a dedicated subsection defining out-of-workflow queries, along with a few concrete examples demonstrating how these queries differ from in-workflow queries and how PDL handles them.\n- Please experimentally compare your framework against one recent constrained-decoding technique using regular expressions, e.g., \u201cValidating Large Language Models with Relm\u201d by Michael Kuchnik et al. The experiment should demonstrate how the authors' approach differs from or improves upon previous constrained-decoding methods in the context of workflow control for LLMs. \n- Please provide a specific toy example showing how PDL handles a new out-of-workflow demand, and include an experimental comparison demonstrating the flexibility of PDL versus rule-based approaches in adapting to new demands."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 5
            },
            "confidence": {
                "value": 3
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        }
    ]
}