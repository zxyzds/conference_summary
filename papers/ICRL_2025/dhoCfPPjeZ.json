{
    "id": "dhoCfPPjeZ",
    "title": "DiSciPLE: Learning Interpretable Programs for Scientific Discovery",
    "abstract": "Creating hypotheses for new observations is a key step in the scientific process of understanding a problem in any domain. A good hypothesis that is interpretable, reliable (good at predicting unseen observations), and data-efficient; is useful for scientists aiming to make novel discoveries. This paper introduces an automatic way of learning such interpretable and reliable hypotheses in a data-efficient manner. We propose DiSciPLE (Discovering Scientific Programs using LLMs and Evolution), an evolutionary algorithm that leverages common sense and prior knowledge of large language models (LLMs) to create hypotheses as Python programs. Additionally, we propose two improvements: a program critic and a program simplifier to further improve our method to produce good hypotheses. We evaluate our method on four different real-world tasks in two scientific domains and show significantly better results. For example, we can learn programs with 35% lower error than the closest non-interpretable baseline for population density estimation",
    "keywords": [
        "AI for Science",
        "Large Language Model",
        "Evolutionary Algorithm",
        "Interpretabilty"
    ],
    "primary_area": "interpretability and explainable AI",
    "TLDR": "An LLM assisted evolutionary algorithm to discover interpretable, data-efficient, and generalizable  formula for  real-world scientific problems.",
    "creation_date": "2024-09-26",
    "original_date": "2024-10-04",
    "modification_date": "2024-10-13",
    "forum_link": "https://openreview.net/forum?id=dhoCfPPjeZ",
    "pdf_link": "https://openreview.net/pdf?id=dhoCfPPjeZ",
    "comments": [
        {
            "withdrawal_confirmation": {
                "value": "I have read and agree with the venue's withdrawal policy on behalf of myself and my co-authors."
            }
        },
        {
            "title": {
                "value": "Response to the reviewers."
            },
            "comment": {
                "value": "We thank the reviewers for their constructive feedback on our work. Based on the recommendations, we plan to withdraw this submission and resubmit a refined version primarily focusing on visual data. In the meantime, we address some of the major concerns below.\n\n**Difference from Symbolic Regression (SR):** The scope of our paper is problems on high-dimensional real-world visual scientific problems (instead of lower-dimensional problems such as equation discovery for the Feynman formula). The approaches such as LLM-based variants of symbolic regression [1,2] do not work under such high-dimensional and open-world settings. As a result, they are always tested on problems with simpler mathematical primitives that are not open-world or very expressive.\n\nInstead, we propose an approach that is **complementary** to these methods. Methods for SR cannot be applied directly in higher-dimensional open-world visual problems.  On the other hand, on low-dimensional problems, existing tools for SR such as [1,2] would perform better than our method. We will make this distinction clear, by focusing our paper on high-dimensional visual scientific problems.\n\nWe would also like to point out that many of the LLM-assisted SR works [1,2] are parallel submissions. Therefore, we believe our work should not be penalized regarding methodological novelty with respect to them.\n\n**Reliance on primitives:** Adding on to the previous point, to build an interpretable yet powerful hypothesis for high-dimensional scientific problems, powerful domain-specific primitives are needed. The lack of such primitives is the primary reason why prior work on symbolic regression cannot work well on high-dimensional problems. \n\nWe would also like to clarify that such primitives are relatively easy to obtain in different modalities. First, the mathematical and logical primitives are domain-independent and should be used for all problem domains. Second, experts in a scientific domain have good knowledge of the domain-specific environment variables, therefore all such environment variables can be easily passed. Finally, several domains have vision foundation models that again can be easily used as primitives. \n\nTo conclude, adding a large number of domain-specific primitives is significantly less work for experts compared to iterating over the hypothesis. Moreover, access to such open-world primitives is what makes DiSciPLE work on high-dimensional data.\n\n**Evaluation information to baseline:** We provide the same input to all the baselines that can be provided to our method. For example, if the programs are allowed to use environment variables, we also allow our concept bottleneck model and deep model with those environment variables. \n\n**Strength of the baselines**: Not only do the baselines see the same information, but the model architecture for deep baselines is also based on state-of-the-art works (metzger et. al., nathaniel et. al.) in the areas of population density, poverty, AGB or CSIF. We will make this information clear in the paper.\n\nWe promise to add more experiments to address the remaining concerns in the future iteration of our work.\n\nThank again you for your reviews.\n\n[1] Grayeli et al., Symbolic Regression with a Learned Concept Library, 2024\n\n[2] Shojaee et al., LLM-SR: Scientific Equation Discovery via Programming with Large Language Models, 2024"
            }
        },
        {
            "summary": {
                "value": "The paper introduces DiSciPLE, a framework that combines Large Language Models (LLMs) with evolutionary search to generate interpretable scientific hypotheses as Python programs. The key idea is to leverage LLMs' prior knowledge and reasoning capabilities to guide the search process through meaningful mutations and crossovers, while maintaining interpretability through feature selection and linear regression. The framework includes two novel components: a program critic that evaluates hypotheses on stratified data partitions, and a program simplifier that removes redundant features. The authors evaluate their approach on four real-world tasks across two scientific domains (demography and climate science)."
            },
            "soundness": {
                "value": 2
            },
            "presentation": {
                "value": 3
            },
            "contribution": {
                "value": 3
            },
            "strengths": {
                "value": "* Interesting combination of LLM reasoning with API specifications for visual understanding and iterative refinement based on observations\n* Well-written paper with clear organization and easy-to-follow methodology\n* Ablation studies demonstrating the contribution of different components"
            },
            "weaknesses": {
                "value": "* Limited scope: The benchmark problems are primarily focused on satellite image analysis and don't fully support the claim of general scientific discovery\n* Inadequate coverage of relevant prior work: Several recent studies using LLMs for symbolic regression, scientific hypothesis generation, and interpretable programming with similar approaches are not discussed or compared against\n* Evaluation fairness concerns: The baselines aren't provided with the same processed features available to DiSciPLE through its primitives\n* Limited baselines: Only uses concept bottleneck models while ignoring more recent approaches in interpretable ML."
            },
            "questions": {
                "value": "* The provided primitives contain significant domain knowledge (e.g., average temperature). While LLM can select among these primitives and simplification can remove redundant features, one might argue that why aren't other baselines (deep learning models, or potentially decision trees) given access to these processed features? \n\n* Could the authors clarify the input features provided to the concept bottleneck and deep model baselines mentioned in Appendix E1?\n\n* Why report the average of 5 zero-shot programs when DiSciPLE generates and selects from 100 programs per iteration? A fairer comparison might be generating 1500 programs (matching DiSciPLE's total of 15*100) without observation feedback and selecting the best.\n\n* The number of iterations (10-15) seems low for effective discovery. Could the authors show convergence plots and compare with larger one-shot program generation?\n\n* Several claims about novelty need revision, as LLMs for mutation/crossover operations have been studied in various domains (neural architecture search, interpretable programming, algorithm discovery, and symbolic regression). Could the authors clarify their specific contributions?\n\n* How can the program critic approach, which works well for land-use categories, be extended to general scientific discovery problems?\n\n* Are the data observations for different input features normalized? Simplification based on weights of linear regression would assume that the range of values are normalized, otherwise, small weights might contribute significantly to the output.\n\n* The final program generates several features by selecting and having products of different raw features, and then use a linear addition (linear regression) of them. However, in many scientific domains, nonlinearities do exist. Can you comment on how to improve the framework for such cases?\n\n* Why does performance drop with more powerful LLMs (LLaMA-70B vs 8B)? Why weren't more recent models like GPT-4 evaluated?\n\n* How are parents sampled in Algorithm 1? Is there an ablation studying the relative importance of mutation vs crossover operators?\n\n* a) In Figure 3's poverty example, using \"poverty_mask\" as a primitive seems problematic as it is the same as the output. b) Is the 0.01 coefficient in the AGB example from LLM knowledge? Does that have specific meaning? Can such parameters be optimized by the model?\n\nSome relevant reference on LLM for scientific hypothesis discovery:\n* LLM and Simulation as Bilevel Optimizers: A New Paradigm to Advance Physical Scientific Discovery\n* LLM-SR: Scientific Equation Discovery via Programming with Large Language Models\n* In-Context Symbolic Regression: Leveraging Large Language Models for Function Discovery\n* Automated Statistical Model Discovery with Language Models\n* Discovery Bench: Towards Data-Driven Discovery with Large Language Models"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 5
            },
            "confidence": {
                "value": 3
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        {
            "summary": {
                "value": "The paper presents DiSciPLE, which combines LLMs with evolutionary search to generate interpretable scientific hypotheses as Python programs. The approach is evaluated on four datasets across two domains, showing better results compared to baselines in the paper."
            },
            "soundness": {
                "value": 2
            },
            "presentation": {
                "value": 3
            },
            "contribution": {
                "value": 2
            },
            "strengths": {
                "value": "The idea of LLM-driven knowledge-guided program search for interpretable scientific modeling is well-motivated and reasonable"
            },
            "weaknesses": {
                "value": "* The paper's heavy reliance on manually designed primitives raises concerns about the LLM role in discovery.  Table 5 shows significant performance drops without these primitives on population density problem (L1 error: 0.26 to 0.84, L2 error: 0.37 to 0.71). Comparing results of \"zero-shot\" and \"no common sense\" variants in Table 1 and Table 5 also further supports this observation that primitives seem to contribute more to performance than the LLM-based evolutionary search for discovery. I understand that domain-specific context is necessary for LLMs, however, requiring so many manual primitives undermines the claims. Have authors explored using LLMs for the design of these problem-specific primitives? \n\n* Following on that, the framework's use of only T=15 evolutionary iterations (line 322) raises concerns about whether the good performance stems from LLM-based search/discovery or simply from LLMs retrieving memorized knowledge and recombining manually pre-defined primitives.\n\n* Can you provide analysis of program diversity across multiple runs/replications of framework for a fixed dataset?\n\n* There are only three baselines in this study (concept bottleneck [1] for interpretable modeling) and two deep models (ResNet and LSTM) for comparison. While the paper demonstrates improvements over these baselines, this is insufficient for a thorough evaluation. I understand that the focus of this work is mainly on interpretable modeling so better deep baselines like transformers may not be the focus of this study. But [2] has been introduced in 2020. Comparison with more recent relevant baselines such as [2] or LLM-based ones such as [3] is essential for validating the method's effectiveness. \n\n* A very similar idea has been recently explored in [4]. I wonder how the proposed method is different. Both approaches seem to leverage LLMs' prior knowledge and Python generation capabilities for program synthesis in scientific discovery. \n\n* Table 4 shows larger Llama3 models performing worse than smaller ones. I would suggest authors to investigate if this is due to search randomness and consider reporting results across multiple runs.\n\n\n**Minor Comments:**\n* Definition of elevation feature in Figure 1 seems missing \n* The paper doesn't clearly explain how problem-specific primitives are incorporated into LLM prompts during evolution.\n* It's unclear whether Table 5 shows in-domain or OOD performance\n* I suggest authors to provide examples of prompt modifications for ablation variants, particularly the ablations for common sense and problem context\n\n--- \n[1] Koh et al., Concept Bottleneck Models, 2020\n\n[2] Oikarinen et al., Label-Free Concept Bottleneck Models, 2023\n\n[3]  Yang et al., Language in a Bottle: Language Model Guided Concept Bottlenecks for Interpretable Image Classification, 2023\n\n[4] Shojaee et al., LLM-SR: Scientific Equation Discovery via Programming with Large Language Models, 2024"
            },
            "questions": {
                "value": "check the weaknesses section"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 3
            },
            "confidence": {
                "value": 4
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        {
            "summary": {
                "value": "The authors introduce a method to automatically produce scientific programs that perform operations (specified via an API of primitive functions) on raw input data/covariates. In brief, their method involves using an evolutionary algorithm, where the crossover and mutation operators are parameterized with LLMs, to construct \u201cprograms\u201d that essentially compute lists of features; these programs can call library functions. These features are interpretable and can be used in a predictive model. The authors demonstrate reasonable performance in a number of tasks."
            },
            "soundness": {
                "value": 3
            },
            "presentation": {
                "value": 2
            },
            "contribution": {
                "value": 3
            },
            "strengths": {
                "value": "The problem setting is important, and the approach is overall practical and well-motivated. Given LLM\u2019s domain knowledge, I think it makes a lot of sense to use LLMs (equipped with access to tools) to construct features for a scientific modeling task, and doing so in an iterative way makes a lot of sense. \n\nThe experimental results are pretty thorough and extensive. DiSCiPLE shows improvements over both naive and deep baselines, both in-domain and out-of-domain. DiSCiPLE is also data-efficient compared to deep models, requiring far fewer training observations. The ablations are comprehensive (e.g., removing domain knowledge to assess the role of the prior knowledge of LLM, characterizing the role of critic/simplification in overall performance). I appreciate that the authors used real-world datasets and it was nice to see a comparison with human experts."
            },
            "weaknesses": {
                "value": "The clarity of this paper can be improved (specifically the description of the method and details about the experiments).  \n\nI was confused about the relationship between the notion of a hypothesis and a scientific program in Section 3.1. The scientific programs, if I understand correctly, are essentially extracting lists of features that can be used to produce a prediction via either a regression model or direct prompting of an LLM. This is explained in Section 3.3 but needs to be clear in Section 3.1 since the targets and the hypothesis h(x_i) are introduced there. \n\nI think the introduction added to this confusion because I thought the programs themselves were parameterizing hypotheses. However, to be precise, it\u2019s actually the combination of these programs + LLM/linear model, right? Basically, this is a paper about feature selection for simple (linear?) predictive scientific models but that really wasn\u2019t that clear to me until reading the paper a few times. \n\nI was also a bit confused about how the thickness of the edges is computed in the DAG representation of the program. \n\nI think a few key experimental details are missing from the main text. I think it\u2019s important to be precise about what \u201csmall\u201d and \u201clarge\u201d mean for a deep model. How large are these datasets? How were these datasets chosen? Is there a reason you can\u2019t compare to a symbolic regression baseline? \n\n\nI was also confused about the motivation behind certain steps. Why not use Lasso or Ridge to control for model complexity in the program simplification step? The simplification step feels a bit ad-hoc and potentially unnecessary, given that there are well-established techniques for regularization. I could be mistaken though and am open to discussion on this point!\n\nThe tasks mainly focus on regression but I think scientific modeling can be more broad than that. I think this is reasonable as a starting point."
            },
            "questions": {
                "value": "The related work section can be expanded. For example, [1] is a relevant paper that uses LLMs to propose and critique probabilistic programs and it could be good to discuss the relationship/novelty of this work with respect to this previous work.\n\n[1] Automated Statistical Model Discovery with Language Models. M. Y. Li, E. B. Fox, & N. D. Goodman. (2024). In International Conference on Machine Learning (ICML).\n\nWhat does AGB estimation and CSIF forecasting mean? Do you define those somewhere?\n\nWho determines the API of primitive functions? It seems a bit restrictive to require a domain expert to specify those in advance although I appreciate that this is probably a reasonable design choice in practice. \n\nIn the critic step, how are the categories for partitioning the data determined? \n\nI\u2019m a bit surprised that the deep models are so ineffective at this task. Did you try transformers or ConvNets for this task?\n\nHow does the performance vary as a function of the number of steps of the evolutionary algorithm?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 6
            },
            "confidence": {
                "value": 3
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        {
            "summary": {
                "value": "The manuscript deals with the research question: How can we automatically discover expressive, interpretable and reliable hypotheses in a sample-efficient way? In order to do that, the propose a DiSciPLE framework plus a critic, and demonstrate its performance for a few chosen scientific domains."
            },
            "soundness": {
                "value": 1
            },
            "presentation": {
                "value": 3
            },
            "contribution": {
                "value": 1
            },
            "strengths": {
                "value": "First, it is noteworthy that it does not constrain the domain to certain scientific fields. This is especially ambitious because one would imagine the vast majority of hypotheses to look quite different in different fields, so a one-size-fit-all approach such as the one explored here is in my opinion best suited as a proof-of-feasibility, rather than a useable framework which would need to be more customized to the characteristics of different research domains.\n\nThe proposed DiSciPLE framework (+ the critic) is a evolutionary algorithm working on a set of lower-level primitives, for the most part to reduce the search space to something manageable. It should be noted here that this is in fact a greedy approach which can indeed identify interesting hypotheses given data, but which cannot claim to be able to identify all possible, or even the best hypotheses. The degree of the greediness should probably be an important hyperparameter, and depending on the choice the usecase for the framework would shift, from exploration-spotlight towards a more systematic sieving."
            },
            "weaknesses": {
                "value": "In its provided form, I think publication and broader dissemination of this framework is unfortunately premature. There are a number of critical pitfalls that are not sufficiently addressed as of yet:\n\n- Identifying good primitives seems to be a critical aspect that may vary strongly from problem to problem (from dataset to dataset). The authors simply write \"the experts (...) provide our framework with a set of primitive variables and functions\", which is first strongly disincentivizing common usage of this framework (since it still requires significant customized effort, which the framework+critic are supposed to solve), and it also strongly constrains the search space to only work in a direction that has been previously identified by the experts. However, if the experts already know that much about the hypothesis -- why use this new framework in the first place?\n\nThis concern could be addressed by the authors systematically making a case that the primitive functions, which \"change depending on the application domain\", are in fact mostly general and maintained within said application domain, and can conceivably be provided by the framework itself (maybe as an additional module). This case is unfortunately not made.\n\nThe authors implement their system using only llama-3-8b-instruct. It would be necessary in my opinion to also try to replicate this result at least on one other open-source LLM model to evaluate how much of the results in such a highly specific prompting scheme is model-dependent.\n\nLastly, this manuscript does not address at all the problem of multiple hypothesis testing. By looking for any kind of pattern in the data fitting with the given primitives, it is highly likely that some of the \"data efficient\" hypotheses may in fact be spurious. A kind of correction for that, an LLM-analogue of Bonferroni correction or similar would urgently be needed to have more reliable potential hypotheses as outputs.\n\nOverall, based on the above considerations and seeing how they are not addressed at all in the manuscript, I unfortunately need to recommend rejection for this manuscript."
            },
            "questions": {
                "value": "Based on the weaknesses as listed above:\n\nCan you make a case that primitive functions are generalisable across many problems within a research field?\n\nHow do you address that this in effect leads to multiple hypothesis testing, without any correction? Do you see this differently, and if so, in what way?\n\nWould you consider customizing your framework to a specific domain, then more thoroughly demonstrate its usefulness within said domain?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 3
            },
            "confidence": {
                "value": 4
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        }
    ]
}