{
    "id": "5AtHrq3B5R",
    "title": "PnP-Flow: Plug-and-Play Image Restoration with Flow Matching",
    "abstract": "In this paper, we introduce Plug-and-Play (PnP) Flow Matching, an algorithm for solving imaging inverse problems. PnP methods leverage the strength of pre-trained denoisers, often deep neural networks, by integrating them in optimization schemes. While they achieve state-of-the-art performance on various inverse problems in imaging, PnP approaches face inherent limitations on more generative tasks like inpainting. On the other hand, generative models such as Flow Matching pushed the boundary in image sampling yet lack a clear method for efficient use in image restoration. We propose to combine the PnP framework with Flow Matching (FM) by defining a time-dependent denoiser using a pre-trained FM model. Our algorithm alternates between gradient descent steps on the data-fidelity term, reprojections onto the learned FM path, and denoising. Notably, our method is computationally efficient and memory-friendly, as it avoids backpropagation through ODEs and trace computations. We evaluate its performance on denoising, super-resolution, deblurring, and inpainting tasks, demonstrating superior results compared to existing PnP algorithms and Flow Matching based state-of-the-art methods.",
    "keywords": [
        "Plug-and-Play",
        "Flow Matching",
        "image restoration",
        "inverse problems",
        "generative modeling"
    ],
    "primary_area": "generative models",
    "TLDR": "We introduce an algorithm combining Plug-and-Play with Flow Matching for solving imaging inverse problems.",
    "creation_date": "2024-09-26",
    "original_date": "2024-10-04",
    "modification_date": "2024-10-13",
    "forum_link": "https://openreview.net/forum?id=5AtHrq3B5R",
    "pdf_link": "https://openreview.net/pdf?id=5AtHrq3B5R",
    "comments": [
        {
            "title": {
                "value": "Clarification for rebuttal"
            },
            "comment": {
                "value": "Thank you for your review. We will address your comments on the numerical section more thoroughly in our next response. It seems that you found certain parts of the paper unclear, while the other reviewers considered the presentation to be good. Could you kindly provide specific points where the explanation was unclear, and indicate what additional details you believe are necessary? For reference, the function F (which is the data-fidelity term) is defined on line 45, and the steps of the algorithm are detailed in Section 3.2. We look forward to making the necessary revisions to enhance the clarity of the paper."
            }
        },
        {
            "summary": {
                "value": "This paper introduces the PnP-Flow Matching algorithm for addressing imaging inverse problems, including denoising, super-resolution, deblurring, and inpainting. The method combines the Plug-and-Play (PnP) framework with Flow Matching (FM) models by using a time-dependent denoiser to tackle image restoration tasks. Specifically, the algorithm alternates between gradient descent on a data fidelity term, reprojection onto a flow matching path, and denoising. The experiments demonstrate the effectiveness of the proposed method."
            },
            "soundness": {
                "value": 2
            },
            "presentation": {
                "value": 1
            },
            "contribution": {
                "value": 2
            },
            "strengths": {
                "value": "1. Low memory usage, making it suitable for high-resolution images.\n2. Consistently performs well across multiple tasks, showing stable PSNR and SSIM improvements."
            },
            "weaknesses": {
                "value": "1. The writing quality needs Improvement. Certain explanations lack clarity, particularly in describing the algorithmic process, e.g., the function F.\n2. The details of the proposed method are insufficient.\n3. The experiment section should be improved. Please refer to the details below."
            },
            "questions": {
                "value": "1. The formula \"y = noisy(Hx)\" uses a general definition for the noisy function. It would be helpful if the paper and experiments explored multiple types of noise to assess the method\u2019s robustness.\n\n2. In Tables 1 and 2, the comparison is limited, particularly with only one diffusion-based method, PnP-Diff, which is a workshop paper, not a main conference paper. The authors should include comparisons with more diffusion-based methods, such as DPS, DeqIR, and DDRM, to provide a fuller view of how their method performs relative to the latest diffusion techniques.\n\n3. The authors could enhance the evaluation by including the ImageNet dataset. For the denoising and deblurring tasks. Testing the method across various noise levels and degrees of blur on a large, diverse dataset like ImageNet would offer more insight into how well the algorithm handles different types of degradation.\n\n4. In Figure 3, the visual results do not show a significant improvement over other methods (e.g., in the last row), even though the PSNR scores are higher. \n\n5. For real-world data with unknown degradation, it would be important to understand how well this method generalizes. \n\n6. It would strengthen the paper if the authors included examples of failure cases. \n\n7. In Table 3, not all methods are compared for computational time and memory usage. Including all relevant methods in this comparison would give a clearer picture of how the proposed algorithm stacks up in terms of efficiency across different benchmarks."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "details_of_ethics_concerns": {
                "value": "None"
            },
            "rating": {
                "value": 3
            },
            "confidence": {
                "value": 5
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        {
            "summary": {
                "value": "The paper proposes a zero-shot method (PnP-flow) for Inverse problems based on a pre-trained flow-matching (FM) model. The method combines the plug-and-play (PnP) framework with flow matching  by alternating between gradient descent steps on the data-fidelity term, reprojections onto the learned FM path, and denoising. PnP-flow achieves state-of-the-art (SOTA) results compared to existing PnP and flow-based algorithms  across different image inverse problems."
            },
            "soundness": {
                "value": 2
            },
            "presentation": {
                "value": 3
            },
            "contribution": {
                "value": 2
            },
            "strengths": {
                "value": "1. The method is training-free which makes it computationally practical.\n2. The method achieves SOTA results compared to existing flow-based methods."
            },
            "weaknesses": {
                "value": "1. My major concern is the lack of comparison to recent zero-shot methods based on a pre-trained diffusion model such as DDNM [1] and DPS [2].\n2. The proposed method is non-blind (assume the full knowledge of the degradation model) which limits its applicability.\n\n\n[1] Wang et al. Zero-Shot Image Restoration Using Denoising Diffusion Null-Space Model. ICLR 2023\n\n[2] Chung et al. Diffusion Posterior Sampling for General Noisy Inverse Problems. ICLR 2023"
            },
            "questions": {
                "value": "1. Could you add comparisons with [1] and [2], or explain why those comparison are missing?\n2. Could you comment on the potential applicability/extension of your method to the blind case?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 5
            },
            "confidence": {
                "value": 3
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        {
            "summary": {
                "value": "This paper proposes to use flow matching in the plug-and-play framework for image restoration. The key is to use FM model as the denoisier. To avoid the numerical challenges, it integrates the implicit FM prior into a custom denoisier."
            },
            "soundness": {
                "value": 2
            },
            "presentation": {
                "value": 3
            },
            "contribution": {
                "value": 3
            },
            "strengths": {
                "value": "1, It proposes a design a time-dependent denoiser based on a pre-trained velocity field v learned through Flow Matching\n\n2, This denoiser is integrated into an adapted Forward-Backward Splitting PnP framework that cycles through a gradient step on the data-fidelity term, an interpolation step and a denoising step\n\n3, Being computationally efficient and memory-friendly via the use of ODE"
            },
            "weaknesses": {
                "value": "1, Why the percpetual metrics are missing? From the visual results, it also seems that the results tend to be blurry. What\u2019s the underlying reason? Is it due to the gradient step or the interpolation step, or something else? \n\n2, In addition, one of the advantages of these generative method is its high perceptual quality, but this method seems to have achieved good distortion performance. How about the results of employing the same end-to-end U-Net model as a simple baseline (for example, using the L1 loss)?\n\n3, Can you visualize all the intermidate resutls of all three steps for all time steps? It could better help readers understand the method."
            },
            "questions": {
                "value": "See weakness"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 6
            },
            "confidence": {
                "value": 4
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        {
            "summary": {
                "value": "In this paper, the authors proposed a plug-and-play image restoration method based on flow matching. The reformulation starts from the forward-backward splitting algorithm, where the proximal step is replaced by a denoising step to form the plug-and-play forward-backward splitting algorithm. The authors insert a specific flow matching method, namely straight-line flows into the PnP-FBS framework due to the computation efficiency of the straight-line flows. Formally, the PnP flow matching algorithm consists of three steps: a gradient step on the data fidelity term, an interpolation step, and a PnP denoising step that is specifically designed to denoise inputs drawn from the straight path."
            },
            "soundness": {
                "value": 3
            },
            "presentation": {
                "value": 3
            },
            "contribution": {
                "value": 3
            },
            "strengths": {
                "value": "1. A new plug-and-play method based on flow matching is proposed in this paper.\n\n2. The paper is well-written.\n\n3. The derivations in this paper are rigorous.\n\n4. The computational complexity and memory footprint of the proposed method is lower than the previous methods due to the careful design."
            },
            "weaknesses": {
                "value": "1. The restored images seem to be over-smoothed."
            },
            "questions": {
                "value": "1. Please explain why the computational complexity and memory footprint of the proposed method is lower than the previous method. Is it due to the design of the model or the choice of the straight-line flow?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 8
            },
            "confidence": {
                "value": 3
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        }
    ]
}