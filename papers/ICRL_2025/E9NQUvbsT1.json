{
    "id": "E9NQUvbsT1",
    "title": "Task and Model Agnostic Differentially Private Graph Neural Networks via Coarsening",
    "abstract": "Graph Neural Networks (GNNs) have emerged as powerful tools for analyzing graph-structured data, deriving representations by aggregating information from neighboring nodes. However, this aggregation process inherently increases the risk of exposing confidential data, as a single node may influence the inference process for multiple nodes simultaneously. To mitigate this risk, researchers have explored differentially private training methods for GNN models. Existing privacy-preserving approaches, however, face significant challenges. They often incur high computational costs during training or struggle to generalize across various GNN models and task objectives. To address these limitations, we introduce Differentially Private Graph Coarsening (DPGC), a novel method that tackles two key challenges in GNN training: scalability and privacy guarantees that are independent of the downstream task or GNN model. Through comprehensive experiments on six datasets across diverse prediction tasks, we demonstrate that  DPGC sets new benchmarks in graph coarsening. Our method achieves superior compression-accuracy trade-offs while maintaining robust privacy guarantees, outperforming state-of-the-art baselines in this domain.",
    "keywords": [
        "Graph Neural Network (GNN)",
        "Differential Privacy (DP)",
        "Graph Coarsening"
    ],
    "primary_area": "learning on graphs and other geometries & topologies",
    "TLDR": "",
    "creation_date": "2024-09-27",
    "original_date": "2024-10-04",
    "modification_date": "2024-10-13",
    "forum_link": "https://openreview.net/forum?id=E9NQUvbsT1",
    "pdf_link": "https://openreview.net/pdf?id=E9NQUvbsT1",
    "comments": [
        {
            "summary": {
                "value": "The paper proposes Differentially Private Graph Coarsening (DPGC), a method with strong generalizability that can be applied to all downstream GNNs."
            },
            "soundness": {
                "value": 2
            },
            "presentation": {
                "value": 3
            },
            "contribution": {
                "value": 2
            },
            "strengths": {
                "value": "The paper is well-written and easy to follow, with a logical flow that enhances comprehension. The experiment details are re clearly demonstrated and the code is released, ensuring that the methodology is transparent and reproducible, which further reinforces the reliability of the study."
            },
            "weaknesses": {
                "value": "The paper claims that the proposed private GNN meets node-DP; however, node-level DP in GNNs requires the protection of node features, all links, and node labels. It appears that the proposed method does not provide protection for node labels. This results in two major concerns: \n\n1. The claim of satisfying node-level DP is not valid, as label protection is essential to uphold this standard.\n2. The experiments presented in Table 3 are potentially unfair. Methods such as DP-MLP, DP-GNN, GAP, PrivGNN, and DPAR include protection for node labels, which raises concerns about the comparability of the results. The observed performance improvement might be attributed to the lack of label protection, making it unclear whether the reported gains are due to the omission of label protection."
            },
            "questions": {
                "value": "Please see weakness. If my concerns are resolved, I am willing to raise the score."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 5
            },
            "confidence": {
                "value": 4
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        {
            "summary": {
                "value": "The author used the graph coarsening technique to help to deal with the high computational costs during training or struggle to generalize across various GNN models and task objectives. The method achieves superior compression accuracy trade-offs while maintaining robust privacy guarantees, outperforming state-of-the-art baselines in this domain."
            },
            "soundness": {
                "value": 3
            },
            "presentation": {
                "value": 3
            },
            "contribution": {
                "value": 2
            },
            "strengths": {
                "value": "1. The idea is very interesting.\n2. The privacy guarantee on DP technique is very solid."
            },
            "weaknesses": {
                "value": "1. The two challenges that proposed to solve by the author: scalability and privacy guarantees are not related with each other.\n2. DP is meant to deal with the privacy attack. However, this does not mentioned in the paper. Attacks including the poisoning attacks, and this cannot be solved by the technique in the paper."
            },
            "questions": {
                "value": "See the weaknesses listed above."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 6
            },
            "confidence": {
                "value": 3
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        {
            "summary": {
                "value": "The submission proposes a differentially private procedure for releasing coarsened graphs, which can then be used for downstream tasks like graph neural network training.\n\nThe coarsening procedure, which maps a graph to a smaller graph in which each node corresponds to a set of nodes in the original graph, involves multiple steps. First, node attributes are embedded via a diffusion step with skip connections (\"WL-Kernel\"). Then, these embeddings are clustered via locality sensitive hashing (LSH), with each cluster corresponding to a node in the coarsened graph. A new adjacency is defined in the usual manner for edge contractions, i.e., two clusters are connected if any of their components are connected. Finally, a new attribute matrix is determined via gradient-based optimization of an objective that enforces similar energy to the original graph, i.e., edge-weighted squared differences between attributes.\n\nTo achieve edge- or node-level differential privacy, calibrated Gaussian noise is added (1) after the LSH projection function and (2) to the final attribute matrix.\n\nFinally, the proposed method is evaluated by comparing its privacy-utility tradeoff to differentially private GNN architectures (e.g. GAP) and graph-specific variations of DP-SGD (e.g. PrivGNN) in an inductive node classification setting. In addition, the effectiveness of a membership inference attack on these approaches is tested and the proposed coarsening procedure is benchmarked against prior work on graph coarsening."
            },
            "soundness": {
                "value": 1
            },
            "presentation": {
                "value": 3
            },
            "contribution": {
                "value": 3
            },
            "strengths": {
                "value": "* The concept of releasing an entire graph with formal node-level privacy guarantees, rather than trying to develop GNN-specific procedures, is exciting and well-motivated\n* The individual components are justified via references to earlier theoretical works on, e.g., GNN expressivity or graph spectral similarity\n* Even ignoring the differential privacy aspect, the coarsening procedure appears to represent an improvement over prior work, see Tables 1&6 (I am not sufficiently familiar with coarsening literature to make a definite statement on this).\n* The experimental evaluation rigorously explores the space of DP-GNN baselines, coarsening methods, and downstream GNNs.\n* Results are reported with standard deviations."
            },
            "weaknesses": {
                "value": "### Primary weakness\nThe main weakness of the proposed work is that **the privacy analysis is incorrect on various levels**. Specifically, (1) the privacy guarantees for the proposed procedure's individual components are overly optimistic or incorrect, (2) privacy leakage of the composition of these components is underestimated and (3) **the overall procedure does in fact not provide any form of edge- or node-level privacy** (contrary to claims in the paper).\n\n* The privacy analysis of the noisy LSH step reuses a result from [1], whose sensitivity analysis assumes that a single row in the input matrix changes. However, due to the WL-kernel diffusion, changes to a single row in the attribute matrix can change all rows in the embedding matrix that is projected by LSH (e.g., in a complete graph). The added noise is thus too small. A valid analysis would require using the group privacy property with group size $N$.\n* The privacy analysis for the final attribute matrix relies on the claim that the involved optimization problem of the form $\\min_\\tilde{X} f(\\alpha, X, \\tilde{X})$ had sensitivity $\\alpha$. It is not clear why the solution of this non-linear minimization problem should have sensitivity $\\alpha$.\n* The proposed DPGC procedure does not actually solve this optimization problem in closed form (which the privacy analysis of the manuscript assumes), but uses gradient descent. Since the considered neighboring relation does not constrain how much attribute matrix $X$ can change,  each gradient can change arbitrarily, i.e., the global sensitivity is $\\infty$.\n* In addition, the analysis ignores that each gradient step accesses the private attribute matrix, meaning the privacy guarantees should weaken with the number of steps. A valid analysis would require use of differentially private stochastic gradient descent, alongside composition or amplification-by-iteration analysis.\n* Assuming the previous analysis were correct, the LSH and the attribute learning step would each be $(\\epsilon,\\delta)$. This does not imply that the sequential composition of these steps is $(\\epsilon,\\delta)$ DP. One needs to apply some composition theorem, e.g., [2].\n* **The adjacency of the coarsened graphs is given by a contraction of the original adjacency. No steps are undertaken to prevent leakage of the adjacency matrix through the contraction operation.** For instance, it is trivial for an adversary to distinguish a graph with $0$ edges and a graph with $1$ edge (both of which are considered neighboring in edge- and node-level DP).\n\n### Other weaknesses\n* The discussion of prior work on differentially private GNNs focuses on methods that attempt to learn private embeddings. It omits works on edge-level DP that, similar to this work, focus on making the input graph/edges themselves private, e.g., [4] or LapGraph from [5]. It also omits works that use DP versions of personalized pagerank to construct a privacy-preserving adjacency matrix, e.g., [6], [7].\n* The manuscript does not discuss how to determine labels for the coarsened graph and does not propose a procedure for ensuring privacy of the nodes' labels.\n* Parts of the main Figure 2 are not representative of the proposed method. Specifically, the \"lock\" symbol above \"5. Supernode's edge assignment\" suggests that there was some procedure that protected adjacency information, which is not the case.\n\n### Minor comments\n* It would be nice to provide a definition of node-level privacy (like the one for edge-level privacy in ll.144-146). Some works only assume that the number of nodes is constant and only the features and edges of a single node change arbitrarily, while other works assume that nodes can be entirely removed.\n* The method appears to be limited to the inductive setting, where we have a separate training graph that is coarsened for DP training. It is unclear how this method can be applied to the more common transductive setting. That is, how we can provide predictions for a partially labelled original graph $G$ after training a model on a coarsened version $\\tilde{G}$ of $G$?\n* The results for GAP are identical in the node-DP (Table 3) and edge-DP (Table 4) setting. However, since its privacy guarantees are stronger for edge-DP, the accuracies in the edge-DP setting at any given privacy budget should be higher.\n* The GAP baseline has been superseded by ProGAP [3], which enables multiple message passing steps. One may want to include it as a baseline (I do not expect the authors to do this for the rebuttal).\n* The chosen delta ($2 \\times 10^{-3}$) is quite large, considering that the considered datasets have over $10^3$ nodes. Usually, one would choose $\\delta \\ll 1 \\mathbin{/}N$.\n\n---\n\n[1] Kenthapadi et al. Privacy via the Johnson-Lindenstrauss transform. Journal of Privacy and Confidentiality. 2013.  \n[2] Kaiorouz et al. The Composition Theorem for Differential Privacy. ICML 2014.  \n[3] Sajadmanesh et al. ProGAP: Progressive Graph Neural Networks with Differential Privacy Guarantees. WSDM 2024.  \n[4] Vu et al. Privacy-Preserving Visual Content Tagging using Graph Transformer Networks. MM 2020.  \n[5] Wu et al. LINKTELLER: Recovering Private Edges from Graph Neural Networks via Influence Analysis. 2022 IEEE Symposium on Security and Privacy (SP).  \n[6] Epasto et al. Differentially Private Graph Learning via Sensitivity-Bounded Personalized PageRank. NeurIPS 2022.  \n[7] Wei at al. Differentially Private Graph Diffusion with Applications in Personalized PageRanks. NeurIPS 2024.  \n\n---\n\nGiven the listed weaknesses, specifically the lack of privacy protection, **I recommend rejection**.\nI nevertheless think that the underlying coarsening method could be a meaningful contribution to the field of graph machine learning.\nI would encourage the authors to either focus exclusively on coarsening without DP, or to try and eliminate the remaining sources of privacy leakage before resubmitting to another venue."
            },
            "questions": {
                "value": "* How are labels for the coarsened graph determined in your experiments?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 1
            },
            "confidence": {
                "value": 5
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        }
    ]
}