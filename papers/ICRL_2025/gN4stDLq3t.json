{
    "id": "gN4stDLq3t",
    "title": "Power Scheduler: A Batch Size and Token Number Agnostic Learning Rate Scheduler",
    "abstract": "Finding the optimal learning rate for language model pretraining is a challenging task. This is not only because there is a complicated correlation between learning rate, batch size, number of training tokens, model size, and other hyperparameters but also because it is prohibitively expensive to perform a hyperparameter search for large language models with Billions or Trillions of parameters. Recent studies propose using small proxy models and small corpus to perform hyperparameter searches and transposing the optimal parameters to large models and large corpus. While the zero-shot transferability is theoretically and empirically proven for model size-related hyperparameters, like depth and width, the zero-shot transfer from small corpus to large corpus is underexplored. In this paper, we study the correlation between optimal learning rate, batch size, and number of training tokens for the recently proposed WSD scheduler. After thousands of small experiments, we found a power-law relationship between variables and demonstrated its transferability across model sizes. Based on the observation, we propose a new learning rate scheduler, Power scheduler,  that is agnostic about the number of training tokens and batch size. The experiment shows that combining the Power scheduler with Maximum Update Parameterization (muP) can consistently achieve impressive performance with one set of hyperparameters regardless of the number of training tokens, batch size, model size, and even model architecture. Our 3B dense and MoE models trained with the Power scheduler achieve comparable performance as state-of-the-art small language models.",
    "keywords": [
        "Learning rate scheduler",
        "language model",
        "pretraining"
    ],
    "primary_area": "foundation or frontier models, including LLMs",
    "TLDR": "We propose a new learning rate scheduler, Power scheduler,  that is agnostic about the number of training tokens and batch size.",
    "creation_date": "2024-09-24",
    "original_date": "2024-10-04",
    "modification_date": "2024-10-13",
    "forum_link": "https://openreview.net/forum?id=gN4stDLq3t",
    "pdf_link": "https://openreview.net/pdf?id=gN4stDLq3t",
    "comments": [
        {
            "summary": {
                "value": "This paper proposes a new learning rate scheduler for language model pre-training that can accommodate varying numbers of pre-training examples. The authors identify a power-law relationship between the ratio LR / batch size and the number of training tokens. They then use this to design a scheduler that will decay the LR exponentially as training proceeds -- importantly, the scheduler improves over other options (cosine schedule) because it doesn't require knowing the number of tokens in advance.\n\nReview summary: The problem is interesting, but there is a huge chunk of significant prior work (on scaling learning rates and batch sizes) that is missing. The plots of experiments appear to be incorrect, and most of the time, the takeaways do not match what is shown in the actual plot. Therefore, although the idea is interesting and may hold some merit, I am recommending rejection because the paper does not constitute a sound and valid scientific study."
            },
            "soundness": {
                "value": 2
            },
            "presentation": {
                "value": 2
            },
            "contribution": {
                "value": 3
            },
            "strengths": {
                "value": "1. It is interesting that the authors find that the learning rate of the WSD scheduler is dependent on the number of tokens trained. The motivation of the scheduler is that one should be able to train in the stable (S) phase for an arbitrary period of time and decay (D) whenever training is completed. However, I do see substantial issues with their experiments that make me question the validity of this finding.\n2. Designing methods that transfer across training budgets is of great interest, since it's hard to ablate all crucial design choices at scale."
            },
            "weaknesses": {
                "value": "**Major Concerns**\n\n1. The authors should cite theoretical and empirical work that has shown that the learning rate _does_ depend on the batch size [1,2,3]. Indeed, these prior works make Fig 2b and Hypothesis 1 unnecessary. Most of the points on their grid agree with the square root scaling rule introduced in [1] and theoretically justified in [2] -- I suspect that if they also adjusted the $\\beta_1,\\beta_2$ hyperparameters in Adam, then it would exactly agree with the square root scaling rule. The bigger problem is that this prior work implies there is _no way_ that the power scheduler can be agnostic to the batch size. Indeed, the main experiments simply pick a fixed batch size and thus don't substantiate the claim that this scheduler generalizes across batch sizes.\n2. I am also concerned that there is not much mathematical thought put into any of the findings in the paper. Decisions are motivated heuristically, perhaps with incorrect plots of experiments, and this makes it hard to believe that the scheduler really will transfer robustly. It's not necessary to have formal proofs or anything like that in this paper, but I think it is necessary to provide intuition of some sort, either via math or careful analyses of the training curves.\n3. The takeaway that I get from Fig 5 doesn't match the written takeaway. The plot shows that the choice of $a$ can drive changes of up to 10 points in the test perplexity, which is _extremely_ significant. Yet the caption and the text in lines 376-377 say that the test perplexity is not sensitive to the choice of $a$.\n4. Altogether, given the issues with Figs 5 and 6, I think the values chosen for $a$ and $b$ don't make any sense to me. The authors should have plotted $(a,b)$ together against the test perplexity. As it stands, there's no evidence to drive the choice of $a$ and $b$.\n\n**Minor Concerns**\n\n1. My above point here also raises the question: why didn't the authors study the effect of $\\beta_1,\\beta_2$? \n2. The paper makes several slightly incorrect statements about $\\mu$P. For example, at the start of Section 3, the authors say that \"Due to our use of $\\mu$P, we expect the optimal learning rate to be invariant across different model sizes, batch sizes, and training steps.\" However, Tensor Programs (the theoretical framework behind $\\mu$P) can only comment on the optimal learning rate on a fixed dataset. I suggest the authors look for these slight mis-statements throughout their paper and correct them. These culminate in the unsupported claim that the hyperparameters for their power scheduler will transfer across model sizes, training tokens, and batch sizes -- there's no fundamental reason for this to be true.\n3. Fig 3 is not made correctly. For example, why is the red curve between batch size 32 and 64 exhibiting a non-zero second-order derivative? It should just be a line, unless additional batch sizes between 32 and 64 were tested. This is misleading. Actually, I am not even sure why these points are connected instead of being presented as a scatter plot.\n5. Fig 6 is also confusing. The caption says it is about the $a$ hyperparameter but the plot appears to be for the $b$ hyperparameter, since the values are all negative. \n7. It would be nice to see training curves for the 1B runs with different schedulers. That can help people understand what is going on when you use the Power Scheduler.\n8. The significance of the 1B results is not apparent to me. The improvement is marginal, and there are more hyperparameters to tune with the Power Scheduler. Also, given the issues with Section 4, I can't tell if the hyperparameters are even selected correctly.\n\n[1] You et al., *Large Batch Optimization for Deep Learning: Training BERT in 76 minutes* (ICLR 2020).\n\n[2] Malladi et al., *On the SDEs and Scaling Rules for Adaptive Gradient Algorithms* (NeurIPS 2022).\n\n[3] Goyal et al., *Accurate, Large Minibatch SGD: Training ImageNet in 1 Hour* (2017)"
            },
            "questions": {
                "value": "See above."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 3
            },
            "confidence": {
                "value": 5
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        {
            "summary": {
                "value": "The paper addresses the challenge of optimizing the learning rate for language model pretraining, complicated by intricate correlations among learning rate, batch size, number of training tokens, and model size, as well as the prohibitive cost of hyperparameter optimization for large-scale models. Leveraging zero-shot transfer techniques, the authors explore dataset size as a fidelity parameter. They extend the WSD scheduler to focus on learning rate, batch size, and number of tokens, conducting extensive small-scale experiments that reveal a power-law relationship among these variables. This leads to the proposal of the Power scheduler, a learning rate scheduler agnostic to the number of training tokens and batch size. Key contributions include:\n\n* Demonstrating that dataset size can effectively serve as a fidelity parameter for zero-shot transfer in hyperparameter tuning.\n* Identifying a power-law relationship between learning rate, batch size, and number of training tokens.\n* Proposing the Power scheduler to simplify hyperparameter tuning by reducing dependency on training tokens and batch size."
            },
            "soundness": {
                "value": 2
            },
            "presentation": {
                "value": 3
            },
            "contribution": {
                "value": 2
            },
            "strengths": {
                "value": "1. Strong Motivation and Practical Relevance: The paper addresses the complex challenge of optimizing learning rates in language model pretraining, where hyperparameters like learning rate, batch size, number of training tokens, and model size are deeply intertwined. Given that hyperparameter optimization at the target scale is computationally prohibitive, their effort to reduce the number of hyperparameters is both timely and valuable.\n\n2. Overcoming Limitations of Existing Schedulers: The authors tackle the drawbacks of current learning rate schedulers, such as the cosine scheduler's requirement to specify the total number of training tokens\u2014a constraint that limits its use in scenarios like continual learning. The proposed Power scheduler is agnostic to the number of training tokens and batch size, offering greater flexibility and applicability.\n\n3. Empirical Discovery of a Scaling Law: Through extensive experiments, they demonstrate that the optimal learning rate shifts across different ranges of tokens and batch sizes, indicating it doesn't transfer directly across scales. By uncovering a power-law relationship among these variables, they provide an empirical foundation for their scheduler.\n\n4. Extensive Experimentation and Practical Impact: The significant amount of experimentation not only validates their findings but also showcases the scheduler's effectiveness on 3B-parameter dense and MoE models. This contributes to simplifying hyperparameter tuning for large-scale language models, which has substantial practical implications for the field."
            },
            "weaknesses": {
                "value": "1. Limited Transferability Demonstrated: The paper's primary contribution relies on identifying specific coefficients for a power-law relationship among learning rate, batch size, and number of training tokens. However, the transferability of these coefficients to different models and datasets is not thoroughly explored. Except for the Mixture-of-Experts models based on the same language model used to uncover the power law, there is a lack of experimentation with other architectures or datasets. This gap leaves uncertainty about whether the proposed Power scheduler can be effectively applied to a broader range of models.\n\n2. Insufficient Details on Hyperparameter Optimization: The methodology for determining the power-law coefficients lacks crucial details. It's unclear whether the authors employed grid search, random search, or another optimization strategy when tuning the coefficients $a$ and $b$ in Figure 5. Information about the number of configurations explored, the computational budget, and the overall search process is missing. This is particularly important if the coefficients are not universally transferable; practitioners aiming to apply the scheduler to different models would need guidance on how to find appropriate coefficients and understand the associated computational costs.\n\n3. Missing Baseline Comparisons: The paper does not compare the proposed scheduler with simpler baselines, such as a warmup plus a stable learning rate scheduler. A basic scheduler that allocates a fixed percentage (e.g., $10$%) of training steps for warmup and then maintains a stable learning rate could also reduce hyperparameters and function well in continual learning setups. Including such baselines, possibly with a final cooldown period would strengthen the evaluation by providing a clearer context for the scheduler's performance improvements.\n\n4. Absence of Learning Curves: Despite citing the Maximum Update Parameterization paper which focuses on stable training, the paper lacks learning curves (e.g., training loss versus number of tokens) that could illustrate training stability and dynamics. Including these curves would provide valuable insights into how the scheduler affects the training process over time and would support claims about improved stability or convergence rates.\n\n5. Unclear Benefit Magnitude: While the experiments show that the optimal learning rate shifts across different token ranges and batch sizes, the practical significance of these shifts is not fully quantified. The performance improvements appear modest; for instance, in the experiments with the Dense model, the Power scheduler outperforms other methods in only 3 out of 7 tasks. A more detailed analysis of the benefits, including effect sizes and statistical significance, would help clarify the scheduler's impact.\n\n6. Minor Typos and Missing Explanations: There are minor errors that need correction\u2014Line 258 should use \"T\" instead of \"x,\" and Figure 6 should label the coefficient as \"b\" instead of \"a.\" Additionally, explanations for other models are missing and could be included in the appendix."
            },
            "questions": {
                "value": "1. Can you provide evidence of the power-law coefficients' transferability to other models and datasets?\n2. What was your methodology and budget for determining the power-law coefficients $a$ and $b$?\n3. What guidelines can you provide for practitioners on determining coefficients and required computational resources?\n4. Have you compared the Power scheduler with simpler baselines like a (warmup plus) stable learning rate (+ final cooldown)?\n5. Could you include learning curves to show training stability when using the Power scheduler?\n6. How do you quantify the practical benefits of the Power scheduler given the modest improvements observed?\n7. Have you tested the Power scheduler in continual learning scenarios with evolving dataset sizes?\n8. Does the Power scheduler impact training efficiency regarding convergence speed or resource utilization?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 3
            },
            "confidence": {
                "value": 4
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        {
            "summary": {
                "value": "The paper introduces the Power Scheduler, a novel learning rate scheduler for large language model (LLM) training that is invariant to batch size and the number of training tokens. The authors first explore the limitations of traditional schedulers, particularly the cosine and WSD schedulers, which are dependent on fixed training steps, leading to suboptimal checkpoints for models trained with varying token counts.\n\nThe key contributions are as follows:\n1. Through theoretical and empirical studies, the paper demonstrates that the optimal learning rate follows a power-law relationship with batch size and token count, enabling a consistent learning rate setting across different model sizes and token volumes.\n\n2. The scheduler is evaluated on various language models, including dense and MoE models, and shows that it performs comparably to or better than existing schedulers, even with different model sizes and architectures. The experiments further validate that Power Scheduler can transfer hyperparameters across proxy models to large-scale models, offering a cost-effective solution for extensive LLM training."
            },
            "soundness": {
                "value": 3
            },
            "presentation": {
                "value": 3
            },
            "contribution": {
                "value": 3
            },
            "strengths": {
                "value": "1. The paper is well-written and easy to understand.\n\n2. The research topic on learning rate scheduler is timely and important for the LLM community.\n\n3. Theoretically, the proposed method is built upon the mu-P framework and thus has a good foundation.\n\n4. Empirically, the effectiveness of the proposed method is verified on up to 3B dense and MoE models, which is comprehensive and convincing."
            },
            "weaknesses": {
                "value": "1. Lack of theoretical justifications and ablation studies for the design choice in Eq. (7). To solve the issue that Eq. (6) tends to provide a small learning rate for a large-scale training corpus, the authors propose a specific design choice in Eq. (7). However, it is unclear how this design choice aligns with the previous result built upon mu-P theory and whether there are better choices.\n\n2. The improvement over WSD seems marginal. As shown in Table 5, measured by PPL, the gap between Cosine and WSD is obvious. However, the proposed method performs similarly to WSD, +0.1 and +0.2 for dense and MoE respectively.\n\nI am open to raising my score if the authors address the above Weaknesses."
            },
            "questions": {
                "value": "1. Besides model size and architectures, can the numbers a=4 and b=0.51 transfer to other optimizers or tokenizers? Do we need to search them again on the corresponding proxy models?\n\n2. How to interpret the results in Table 6 and Table 7? If I understand correctly, there exist many differences between the PowerLM and the compared models, not solely the Power Scheduler. How could we attribute the performance gain to the proposed method?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 5
            },
            "confidence": {
                "value": 3
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        {
            "summary": {
                "value": "Power Scheduler is designed to be independent of the batch size and number of training tokens. The motivation for this work is the inefficiencies in current schedulers like the Warmup-Stable-Decay (WSD) scheduler, which still ties the optimal learning rate to the number of training tokens, making continual training and early stopping suboptimal for large language models (LLMs). By identifying a power-law relationship between optimal learning rates, batch size, and the number of training tokens, the authors introduce a new scheduling method that generalizes across model sizes, batch sizes, and token counts. The results show that this approach improves model performance while maintaining flexibility in training large models, including both dense and Mixture of Experts (MoE) models."
            },
            "soundness": {
                "value": 2
            },
            "presentation": {
                "value": 3
            },
            "contribution": {
                "value": 3
            },
            "strengths": {
                "value": "The Power Scheduler addresses a critical gap in learning rate scheduling for LLMs by eliminating the need to specify batch size or token counts in advance. This is a significant improvement over traditional approaches like the cosine and WSD schedulers, which require predefined training steps and can be suboptimal in continual learning scenarios. The paper introduces a well-motivated, novel concept of using a power-law relation to generalize the learning rate across different training setups, showing strong theoretical justification and empirical validation. The experimental results are demonstrating that the Power Scheduler achieves comparable or superior performance on both dense and MoE models. Its flexibility across model sizes and architectures makes it highly relevant for scaling deep learning workloads efficiently.\n\nAnother strength of the paper is its comprehensive experimental setup, which tests the Power Scheduler against state-of-the-art models in controlled environments and realistic training scenarios. The authors thoroughly explore hyperparameter search and transferability, particularly in the context of large-scale pretraining with billions of parameters. the integration with Maximum Update Parameterization (*\u00b5P*) shows that the scheduler can maintain stable training dynamics across various model sizes, a critical feature for improving the transferability of hyperparameters from small proxy models to large-scale models."
            },
            "weaknesses": {
                "value": "The major limitation of the paper is only 12M 36M 121M models are trained which significantly weakens the liability of results.\n\nThe paper could benefit from a more in-depth discussion on the computational costs of this search process, particularly for very large models where even proxy model training can be expensive. Offering practical guidelines for efficiently setting or approximating these hyperparameters without extensive searches would improve the usability of the method.\n\nThe writing is generally good, but the large table of hyper-parameters disrupts the flow.\n\nWhile the experiments demonstrate strong performance on language modeling some downstream tasks, including more challenging or varied domains, such as reasoning-based tasks or multi-modal data, would better validate the generality of the Power Scheduler.\n\nSome related works are missing:\n\n- Scaling Optimal LR Across Token Horizons"
            },
            "questions": {
                "value": "why are the curves in fig. 3 very non-monotonic?\n\n In fig. 2(a) training longer requires a larger LR in general, but the other paper found the opposite is true in a larger scale, what cause the difference? [1]\n\n[1] Scaling Optimal LR Across Token Horizons"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 6
            },
            "confidence": {
                "value": 3
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        }
    ]
}