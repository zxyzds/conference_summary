{
    "id": "FbbusgKmSW",
    "title": "Improving Gaussian Splatting with Localized Points Management",
    "abstract": "Point management is critical for optimizing 3D Gaussian Splatting models, as point initiation (e.g., via structure from motion) is often distributionally inappropriate. Typically, Adaptive Density Control (ADC) algorithm is adopted, leveraging view-averaged gradient magnitude thresholding for point densification, opacity thresholding for pruning, and regular all-points opacity reset. We reveal that this strategy is limited in tackling intricate/special image regions (e.g., transparent) due to inability of identifying all 3D zones requiring point densification, and lacking an appropriate mechanism to handle ill-conditioned points with negative impacts (occlusion due to false high opacity). To address these limitations, we propose a  Localized Point Management (LPM) strategy, capable of identifying those error-contributing zones in greatest need for both point addition and geometry calibration. Zone identification is achieved by leveraging the underlying multiview geometry constraints, subject to image rendering errors. We apply point densification in the identified zones and then reset the opacity of the points in front of these regions, creating a new opportunity to correct poorly conditioned points. Serving as a versatile plugin, LPM can be seamlessly integrated into existing static 3D and dynamic 4D Gaussian Splatting models. Experimental evaluations validate the efficacy of our LPM in boosting a variety of existing 3D/4D models both quantitatively and qualitatively.  Notably, LPM improves both static 3DGS and dynamic SpaceTimeGS to achieve state-of-the-art rendering quality while retaining real-time speeds, excelling on challenging datasets such as Tanks & Temples and the Neural 3D Video dataset.",
    "keywords": [
        "3D Reconstruction; 3D Gaussian Splatting; Novel View Synthesis"
    ],
    "primary_area": "applications to computer vision, audio, language, and other modalities",
    "TLDR": "",
    "creation_date": "2024-09-27",
    "original_date": "2024-10-04",
    "modification_date": "2024-10-13",
    "forum_link": "https://openreview.net/forum?id=FbbusgKmSW",
    "pdf_link": "https://openreview.net/pdf?id=FbbusgKmSW",
    "comments": [
        {
            "withdrawal_confirmation": {
                "value": "I have read and agree with the venue's withdrawal policy on behalf of myself and my co-authors."
            }
        },
        {
            "summary": {
                "value": "The paper introduces a point management method for 3D Gaussian Splatting, designed to improve point densification and correction. This approach leverages rendering errors in individual training views to identify 3D error zones by considering multi-view correspondences of 2D errors. Based on these detected error zones, point densification and opacity correction are applied to enhance the overall reconstruction quality. The results demonstrate promising improvements, with both quantitative and qualitative comparisons to the original 3D Gaussian Splatting and other prior methods."
            },
            "soundness": {
                "value": 3
            },
            "presentation": {
                "value": 3
            },
            "contribution": {
                "value": 3
            },
            "strengths": {
                "value": "The key contribution of the error-based point management technique sounds interesting and kind of novel, which seems naturally applicable to any GS-based representation and also leads to certain improvements over the standard technique used in 3DGS."
            },
            "weaknesses": {
                "value": "1. The method primarily relies on the assumption that regions with high errors require densification and correction. While this seems intuitively reasonable, it lacks a strong theoretical foundation, and many of the design choices appear ad-hoc without detailed mathematical explanations. Overall, the method shows some effectiveness, yet the mechanisms behind it remain unclear.\n\n2. My main concern is on the quality. While the method offers some enhancement, the gains over standard 3D Gaussian Splatting appear incremental. Most quantitative results show PSNR improvements of less than 0.5 dB, with gains around 0.2 dB for static scenes, which is relatively marginal. Additionally, the visual comparisons reveal few notable differences, with only selected cropped examples\u2014such as the truck windows\u2014showing clearer improvement. These examples, however, are very few and appear carefully chosen. If the method specifically enhances quality in certain regions like transparent objects, this could be an interesting selling point, but a thorough explanation/evaluation, supported by more examples across various datasets, would be necessary to substantiate this claim."
            },
            "questions": {
                "value": "Overall, the method introduced in the paper has some novelty but I found it lacks a strong theoretical foundation. The quality improvement of 0.2~0.5db is also marginal. In general, while the approach offers an interesting advancement in point management for 3D Gaussian Splatting, it appears to be a relatively marginal step and still far from an optimal solution.\n\nAn additional comment: The paper \"VET: Visual Error Tomography for Point Cloud Completion and High-Quality Neural Rendering\" shares some similar insights with this work on leveraging visual errors for improvement in 3D point reconstruction and might be worth citing and discussing."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 5
            },
            "confidence": {
                "value": 4
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        {
            "summary": {
                "value": "This paper introduces a point management strategy for 3DGS to identify error-contributing zones. Specifically, they use LightGlue to provide pair correspondence, thus solving regions that are incorrectly located. Experiment results show that their strategy can be applied to different 3DGS methods and slightly improve the performance."
            },
            "soundness": {
                "value": 2
            },
            "presentation": {
                "value": 3
            },
            "contribution": {
                "value": 1
            },
            "strengths": {
                "value": "* The proposed method is a plug-in module. Although it takes additional computation to use LightGlue, the performance seems to have improved.\n* The motivation of the proposed method is intuitive."
            },
            "weaknesses": {
                "value": "* One crucial weakness is that the performance improvement by introducing such a module is minor. In most experiments, the PSNR is only improved by 0.1~0.2 PSNR, and the improvements on other metrics are even less noticeable, like SSIM. This raises the question of whether introducing such a module together with LightGlue is a good solution. In addition, as the performance difference could be due to randomness, an error-bound analysis would be helpful.  \n* Leveraging the pixel correspondence model may introduce additional errors since it may fail to find the correct correspondence. An analysis of such failure cases is helpful."
            },
            "questions": {
                "value": "* For 3D Gaussian splatting methods, the position of 3D Gaussians usually does not need to be perfect. Such flexibility allows the model to learn lightning and specular information. Thus, accurate 3D point management is less necessary, which may be the reason for the minor performance improvements in this paper. My question is whether this management helps more with the geometry modeling of 3DGS. Specifically, a quantitative comparison of surface modeling with 2DGS may help demonstrate its strength."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 5
            },
            "confidence": {
                "value": 4
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        {
            "summary": {
                "value": "- This paper proposes a local point management (LPM) strategy to identify 3D regions that require point densification to alleviate the limitation of adaptive density control in 3D-GS.\n- LPM can identify not only regions but also ill-conditioned points by leveraging multi-view geometric constraints and image rendering errors.\n- LPM can be seamlessly integrated into existing 3D-GS-based methods. Experiments on static and dynamic scenes verify the proposed LPM's effectiveness."
            },
            "soundness": {
                "value": 3
            },
            "presentation": {
                "value": 3
            },
            "contribution": {
                "value": 3
            },
            "strengths": {
                "value": "1. The proposed LPM can identify 3D regions that cause incorrect rendering. For error regions, LPM densifies points or adds new Gaussians in these regions and resets the opacity of points in front of these regions.\n2. By integrating LPM into existing 3D/4D GS methods, the rendering quality of static or dynamic scenes can be improved."
            },
            "weaknesses": {
                "value": "1. 3D zone identification requires the partial assignment predicted by LightGlue, which leads to some problems:\n  - LPM cannot handle non-overlapping regions regions between two views.\n  - Error and missing matches may harm LPM.\n\n2. Although LPM is evaluated on Neural 3D Video dataset, for dynamic objects, the error region may move over time, and LPM lacks a mechanism to handle this situation. As shown in Figures 4 and 6, the improvement focuses on the static part. \n\n3. Lacking some details. For example,\n  - As shown in L202, how are the paired region adaptive adjustments?\n  - The details formula of\u00a0rCone\u00a0in L208\n  - What is the interval for applying LPM? Is that apply LPM every 100 iterations just like the densified interval in 3D-GS?\n\n4. Lacking discussion about limitations and failure cases."
            },
            "questions": {
                "value": "See `Weaknesses`."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 6
            },
            "confidence": {
                "value": 4
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        }
    ]
}