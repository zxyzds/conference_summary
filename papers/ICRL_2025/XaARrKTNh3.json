{
    "id": "XaARrKTNh3",
    "title": "A Catalyst Framework for the Quantum Linear System Problem via the Proximal Point Algorithm",
    "abstract": "Solving systems of linear equations is a fundamental problem, but it can be computationally intensive for classical algorithms in high dimensions. Existing quantum algorithms can achieve exponential speedups for the quantum linear system problem (QLSP) in terms of the problem dimension, but even such a theoretical advantage is bottlenecked by the condition number of the coefficient matrix. In this work, we propose a new quantum algorithm for QLSP inspired by the classical proximal point algorithm (PPA). Our proposed method can be viewed as a meta-algorithm that allows inverting a modified matrix via an existing \\texttt{QLSP\\_solver}, thereby directly approximating the solution vector instead of approximating the inverse of the coefficient matrix. By carefully choosing the step size $\\eta$, the proposed algorithm can effectively precondition the linear system to mitigate the dependence on condition numbers that hindered the applicability of previous approaches. Importantly, this is the first framework for QLSP where a tunable parameter $\\eta$ allows the user to control the trade-off between the runtime and the approximation error.",
    "keywords": [
        "quantum linear system problem",
        "proximal point algorithm",
        "quantum algorithm",
        "catalyst"
    ],
    "primary_area": "optimization",
    "TLDR": "",
    "creation_date": "2024-09-26",
    "original_date": "2024-10-04",
    "modification_date": "2024-10-13",
    "forum_link": "https://openreview.net/forum?id=XaARrKTNh3",
    "pdf_link": "https://openreview.net/pdf?id=XaARrKTNh3",
    "comments": [
        {
            "summary": {
                "value": "This paper investigates the quantum linear system problem (QLSP), which aims to produce a quantum state encoding the solution vector $x$ for a given matrix $A$ and vector $b$, such that $Ax = b$, assuming quantum query access to $A$ and $b$. The current best-known algorithm for QLSP achieves a query complexity of $O(\\kappa \\log \\epsilon^{-1})$, where $\\kappa$ is the condition number of $A$ and $\\epsilon$ is the target error. While this result offers an exponential speedup in terms of $N$, the dimension of the system, the algorithm\u2019s query complexity scales linearly with $\\kappa$. Prior work has established that this linear dependence on $\\kappa$ is unavoidable in the worst case, reducing the quantum advantage for poorly conditioned matrices.\n\nThis paper partially addresses this limitation by introducing a meta-algorithm for QLSP based on the proximal point algorithm (PPA)\u2014a classical iterative optimization technique. This framework can be applied to any existing quantum linear system algorithm (QLSA) to modulate the tradeoff between solution precision and condition number. When applied to the current state-of-the-art QLSA, this meta-algorithm yields a constant-level improvement across a range of precision requirements, thereby extending the practical applicability of quantum linear system solvers."
            },
            "soundness": {
                "value": 4
            },
            "presentation": {
                "value": 3
            },
            "contribution": {
                "value": 2
            },
            "strengths": {
                "value": "This paper introduces a novel framework that enhances the dependence on the condition number $\\kappa$ in quantum algorithms, while incorporating additional problem-dependent parameters. In the worst-case scenario, it achieves a significant constant-factor improvement over the existing state-of-the-art algorithm. The framework also includes a tunable parameter $\\eta$, allowing users to adjust the balance between runtime and approximation error."
            },
            "weaknesses": {
                "value": "1. The meta algorithm itself is relatively simple, and the techniques used to analyze the problem is not extremely complicated.\n2. The algorithm introduces additional problem-specific parameters, such as, $\\Psi$ and $d\\coloneqq ||x_0-x^*||$. Moreover, the paper did not provide a very thorough discussion on these parameters."
            },
            "questions": {
                "value": "1. Can the authors provide more discussions on these additionally introduced parameters?\n2. Can the authors give a more detailed discussion on how the tradeoff between the runtime and the approximation error is achieved from the bound in Theorem 6?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 5
            },
            "confidence": {
                "value": 4
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        {
            "summary": {
                "value": "This paper proposes a novel meta-algorithm for solving the quantum linear system problem (QLSP) based on the proximal point algorithm (PPA). The performance of quantum linear system solvers heavily depends on the condition number of the linear system. Due to a query lower bound result, the linear dependence on condition number can not be further improved (in the asymptotic scaling sense). This paper incorporates the proximal point algorithm as a pre-conditioner of a QLSP solver. The new proximal-point QLSS can leverage the trade-offs between the approximation error (in the output solution) and the condition number of the linear system. It is proven that a finite stepsize mitigates the condition number, at the cost of making the resulting solution inexact. Numerical results show this new approach can lead to a generic (constant) speedup in solving linear systems over existing STOA."
            },
            "soundness": {
                "value": 3
            },
            "presentation": {
                "value": 3
            },
            "contribution": {
                "value": 2
            },
            "strengths": {
                "value": "- This paper exploits the proximal point algorithm to reformulate the original linear system problem as an approximate optimization problem, where the new problem is parametrized by the \"step size\" $\\eta$. This new parameter provides a continuous interpolation from the original problem (for $\\eta = +\\infty$) to a pre-conditioned problem (for small $\\eta$). This is an interesting point of view and also the first proposal to combine the proximal point algorithm with a quantum linear system solver (to my best knowledge).\n- Numerical results show that this approach reduces the total query complexity over the STOA quantum linear system solver."
            },
            "weaknesses": {
                "value": "- My main concern is that the proximal point algorithm proposed in this paper can have a **single** iteration. This feature makes this algorithm less useful in practice. The main difficulty is that the state preparation oracle (see Definition 2) is hard (or maybe impossible) to construct for subsequent steps. \n- While it is discussed that a multi-step PPA can be realized by implementing different powers of the modified matrix, it is not clear why this would lead to asymptotic speedup because inverting $(I + \\eta A)^n$ for $n \\ge 2$ is likely to incur a super-linear overhead in the condition number. I would conjecture that the naive multi-step PPA will lead to a polynomial slowdown compared to the quantum STOA. \n- I do not understand how this PPA approach is compared to an \"exact\" quantum linear system solver, because this PPA approach can only perform a single iteration step so the solution is not exact. Can the authors elaborate on how a fair comparison is achieved? Is the error budget for both methods pre-fixed?"
            },
            "questions": {
                "value": "Besides the questions that are raised in the \"Weaknesses\" part, I have the following questions:\n- Is there a practical way to choose the stepsize $\\eta$ in the algorithm? What if the obtained solution is still far from the exact solution to the linear system?\n- Is it possible to use the PPA solution as a \"warm start\" in a quantum linear system solver, which might be helpful to improve the overall performance?\n- Can the authors further elaborate on how the comparison is made in Figure 1? Is it fair to include a $c$ parameter in Algorithm 1?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "details_of_ethics_concerns": {
                "value": "N/A"
            },
            "rating": {
                "value": 3
            },
            "confidence": {
                "value": 4
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        {
            "summary": {
                "value": "This paper is a good attempt to make QLSA more practical although there is no theoretical improvement in the bigO complexity. However, the authors did not discuss how large the \u201cconstant\u201d improvement could be if someone wants to \u201cread out\u201d the quantum solution. In fact, an issue would appear in that regime and limit the \u201cconstant\u201d improvement."
            },
            "soundness": {
                "value": 2
            },
            "presentation": {
                "value": 3
            },
            "contribution": {
                "value": 2
            },
            "strengths": {
                "value": "The proposed approach is easy to plug in any quantum linear systems solver. Improving the conditional number is one of the most important tasks in QLSA."
            },
            "weaknesses": {
                "value": "As demonstrated in Figure 1, kappa^hat is less than kappa/2. According to lemma 1, parameter eta would be less than kappa-2 (or simply kappa). According to the eta choice in theorem 3, if we simply use eta less than kappa, then we have epsilon_2 larger than d. Recall that epsilon_2 is the accuracy for x_{t+1}-x^* as in equation 14, which is the accuracy people care about in the classical setting. This means, if someone wants to eventually read out the quantum solution, ignoring the error from the reading-out process, the accuracy of the classical solution will be very low because the accuracy is at most d and d is simply the initial accuracy. If we don\u2019t want to read out the solutions, the applicability will be significantly limited. \n\nA side comment: the notations of a quantum state are not consistent, i.e., some of them use the braket notation while some do not."
            },
            "questions": {
                "value": "See the weakness above."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 5
            },
            "confidence": {
                "value": 4
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        {
            "summary": {
                "value": "Quantum linear system problem (QLSP) is of great importance in quantum algorithms, which focuses on solving a system of linear equations, i.e., find a state $\\ket{x} = x/\\|x\\|$ where $x$ is the solution to $Ax=b$. QLSP problem is fundamental as it is a key step in many quantum algorithms, such as quantum recommendation systems and solving differential equations. However, a major limitation of the QLSP solver is that the complexity has a linear dependence of the condition number $\\kappa$ of the matrix $A$. Whether one can alleviate this issue is also of general interest.\n\nIn this paper, the authors propose a new algorithm based on proximal point algorithm (PPA) to reduce the query complexity in solving QLSP in a constant degree. To achieve this acceleration, the authors uses the technique of shifting the matrix $A$ of the problem to $I+\\eta A$, leading to the change of condition number of the problem. In addition, the authors also draw some graphs to demonstrate the acceleration."
            },
            "soundness": {
                "value": 3
            },
            "presentation": {
                "value": 1
            },
            "contribution": {
                "value": 2
            },
            "strengths": {
                "value": "The authors propose a new algorithm (PPA for QLSP) to alleviate the linear dependence on condition number of the QLSP solvers, yielding a constant acceleration of previous QLSP solvers."
            },
            "weaknesses": {
                "value": "First, a main technical tool is the use of PPA algorithm for shifting, which might lack novelity. \nSecond, the proofs of the main theorems seems straigthforward and incremental. \nAlso, it looks like more numerical experiments could be conducted to demonstrate the actual performance of their proposed algorithm.\nFurthermore, I am not sure whether the topic of this paper fits for the scope of ``learning represenations''."
            },
            "questions": {
                "value": "- In Theorem 3, the parameter $\\eta$ is set to $\\kappa (d/\\varepsilon_2 - 1)$, but $\\kappa$ may be unknown. Could the authors explain what to to if $\\kappa$ is not known?\n\n- In Theorem 6, it seems that difference between the modified condition number $\\hat{\\kappa}$ and $\\kappa$ has a linear dependence on $\\Psi$, which relies on the choice of $x_0$ and $\\eta$. Could the authors explain more about how to choose $x_0$ and $\\eta$?\n\n- Page 9, Line 482: proximal poin algorithm \u2014> proximal point algorithm.\n\n- Page 14, Line 733: the codes in algorithm 2 for Hamilonian simulation could be improved for readability."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 5
            },
            "confidence": {
                "value": 3
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        }
    ]
}