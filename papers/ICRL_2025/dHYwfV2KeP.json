{
    "id": "dHYwfV2KeP",
    "title": "Locality-aware Gaussian Compression for Fast and High-quality Rendering",
    "abstract": "We present LocoGS, a locality-aware 3D Gaussian Splatting (3DGS) framework that exploits the spatial coherence of 3D Gaussians for compact modeling of volumetric scenes.\nTo this end, we first analyze the local coherence of 3D Gaussian attributes, and propose a novel locality-aware 3D Gaussian representation that effectively encodes locally-coherent Gaussian attributes using a neural field representation with a minimal storage requirement.\nOn top of the novel representation, LocoGS is carefully designed with additional components such as dense initialization, an adaptive spherical harmonics bandwidth scheme and different encoding schemes for different Gaussian attributes to maximize compression performance.\nExperimental results demonstrate that our approach outperforms the rendering quality of existing compact Gaussian representations for representative real-world 3D datasets while achieving from 54.6$\\times$ to 96.6$\\times$ compressed storage size and from 2.1$\\times$ to 2.4$\\times$ rendering speed than 3DGS. Even our approach also demonstrates an averaged 2.4$\\times$ higher rendering speed than the state-of-the-art compression method with comparable compression performance.",
    "keywords": [
        "point-based rendering",
        "neural fields",
        "compression"
    ],
    "primary_area": "applications to computer vision, audio, language, and other modalities",
    "TLDR": "We propose a locality-aware 3D Gaussian representation with highly compact storage size.",
    "creation_date": "2024-09-26",
    "original_date": "2024-10-04",
    "modification_date": "2024-10-13",
    "forum_link": "https://openreview.net/forum?id=dHYwfV2KeP",
    "pdf_link": "https://openreview.net/pdf?id=dHYwfV2KeP",
    "comments": [
        {
            "summary": {
                "value": "This paper tackles the high storage demands associated with 3D Gaussian Splatting by introducing an effective compression method. The core idea is to exploit local similarity within Gaussian attributes, representing them through compact, well-encoded local features. The authors start by conducting a statistical analysis of 3D Gaussian Splatting (3DGS) attributes and proceed to design a local feature that captures and encodes these similar patterns within a given region. By combining carefully structured steps\u2014such as pruning, point cloud initialization, quantization, and entropy encoding\u2014the proposed method achieves substantial compression of the 3DGS field. Remarkably, this compression is achieved while maintaining, or even enhancing, the rendering quality and fidelity relative to the original setup."
            },
            "soundness": {
                "value": 3
            },
            "presentation": {
                "value": 3
            },
            "contribution": {
                "value": 3
            },
            "strengths": {
                "value": "1. The overall solution is comprehensive, incorporating careful designs for initialization, pruning, and compression schemes for different components. \n2. The paper is well-written with a clear logical flow.\n3. The dense initialization demonstrates an interesting improvement in compression.\n4. The analysis of storage size in Tab.3 provides a valuable indication for the community about the current bottlenecks in compression."
            },
            "weaknesses": {
                "value": "1. Number of Gaussians in Variants: It would be beneficial to provide the number of Gaussians for different variants, as Ours-Sparse has a lower FPS compared to Ours-Small and Ours. Understanding whether the final number of Gaussians influenced the results is important. Including the point number counts along the training iteration would help illustrate the influence of different initializations. Additionally, it would be interesting to see if such an initialization design could improve the performance of previous approaches.\n2. The method still takes extra training time to compress a 3DGS, which will be a limitation in some real applications."
            },
            "questions": {
                "value": "1. Please include the number of Gaussians for the different ablation versions in Tab.3 to understand the main reason for high FPS.\n \n2 Decoding Time: Including the decoding time would help readers understand the applicability of the proposed method."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 6
            },
            "confidence": {
                "value": 5
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        {
            "summary": {
                "value": "The paper aims to achieve both high rendering speed and reduced storage size for 3D Gaussian Splatting-based scene representations. To this end, it analyzes the local coherence of Gaussians across several scenes and proposes exploiting multi-resolution hash grids. More specifically, Gaussians now have only base scale, positions, and base color, while hash grids fill in the details. In addition, the paper employs adaptive SH bandwidth, pruning, dense initialization, quantization, and encoding. With all these methods, the paper demonstrates significant performance improvement."
            },
            "soundness": {
                "value": 4
            },
            "presentation": {
                "value": 4
            },
            "contribution": {
                "value": 3
            },
            "strengths": {
                "value": "The concept of locality is not novel in 3D Gaussian Splatting, but the paper effectively illustrates this through graphs. Moreover, it clearly addresses the differences between other locality-based methods (anchor-based methods), explaining why the proposed method is important and highlighting key points for readers already familiar with anchor-based representation.\n\nThe performance improvements in terms of size, rendering speed, and rendering quality are significant.\n\nAdditionally, the paper includes many technical details for adopting various techniques, especially during quantization and encoding, which will benefit those working in this research areas."
            },
            "weaknesses": {
                "value": "As I mentioned in the strength section, the idea of utilizing locality in 3D Gaussian Splatting is not novel."
            },
            "questions": {
                "value": "How did you calculate cosine similarity of opacities?\nI would also like to know how and why three explicit attributes were selected."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 8
            },
            "confidence": {
                "value": 4
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        {
            "summary": {
                "value": "LocoGS analyzes the local coherence of the attributes of Gaussian primitives and introduces a novel representation that incorporates locality information. By utilizing the locality-aware 3D Gaussian representation along with other compression methods, such as quantization and encoding schemes, LocoGS achieves state-of-the-art compression performance and rendering FPS compared to existing compression methods."
            },
            "soundness": {
                "value": 3
            },
            "presentation": {
                "value": 3
            },
            "contribution": {
                "value": 3
            },
            "strengths": {
                "value": "1. LocoGS carefully analyzes the relationships among 3D Gaussian attributes and introduces a locality-aware representation based on these relationships.\n2. The paper is well written and easy to follow, with an excellent categorization of compression methods.\n3. LocoGS outperforms existing methods in both compression performance and rendering speed."
            },
            "weaknesses": {
                "value": "1. Dense initialization is not related to compression; it is merely a warm-up trick. It would be unfair for the authors to use this trick since all of the baselines still initialize with COLMAP points.\n2. As we know, the training time for Nerfacto is significantly longer than for 3DGS. Why do the authors choose to use Nerfacto for warm-up instead of 3DGS? Both methods can generate coarse depth maps, which can then be used to create an initialization point cloud. Additionally, how many iterations do the authors train Nerfacto for dense initialization?\n3. In the limitations section, the authors describe that LocoGS requires one hour more training time than the baselines. Which components affect the training efficiency\u2014is it the dense initialization?\n4. No demos submitted."
            },
            "questions": {
                "value": "1. I would like to understand the reason why the rendering performance of LocoGS is lower than that of Scaffold-GS. Aside from the quantization and encoding schemes, do the authors discard the view input of the MLP when obtaining each attribute of the 3D Gaussians?\n2. How about the performance in large-scale datasets, like Mega-NeRF, Urbanscene3D or MatrixCity?\n\nIf the authors solve these questions, I\u2019ll raise the score."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 5
            },
            "confidence": {
                "value": 4
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        {
            "summary": {
                "value": "The paper introduces \"LocoGS,\" a locality-aware 3D Gaussian Splatting (3DGS) framework designed for fast and high-quality rendering. This framework capitalizes on the spatial coherence among 3D Gaussians to offer a compact, efficient representation that significantly reduces storage requirements and enhances rendering speed without sacrificing quality. \n\nKey contributions include:\n1. A new locality-aware 3D Gaussian representation that efficiently encodes locally-coherent Gaussian attributes.\n2. Implementation of additional components like dense initialization, Gaussian pruning, adaptive spherical harmonics bandwidth scheme, and tailored encoding schemes to maximize compression performance.\n3. Demonstrated superior performance over existing methods in terms of compression ratio and rendering speed, verified through extensive experiments."
            },
            "soundness": {
                "value": 3
            },
            "presentation": {
                "value": 3
            },
            "contribution": {
                "value": 2
            },
            "strengths": {
                "value": "1. The locality-aware strategy for Gaussian attribute representation is a novel approach that leverages spatial coherence effectively.\n2. The paper includes detailed comparisons with existing methods, showing improvements in storage efficiency and rendering speed. The reduced storage and increased speed facilitate the practical application of 3DGS in real-time scenarios, like mobile devices.\n3. The motivation and clarity of the paper are commendable."
            },
            "weaknesses": {
                "value": "1. The multiple components introduced (e.g., multi-resolution hash grids, and adaptive SH bandwidths) might complicate the implementation and tuning of the framework.\n2. The paper could benefit from more discussion on any potential trade-offs or limitations, particularly in different or more challenging rendering environments. e.g. metal and lighting area."
            },
            "questions": {
                "value": "1. Are there scenarios or conditions under which the proposed method might not perform as expected? e.g. large scenes.\n2. Could you provide more detailed explanations or pseudo-codes for complex components like the adaptive SH bandwidth and pruning strategy? Are you going to publish your code?\n3. Does your model also perform better in larger scenes? Can you please add more experiments on how it performs in larger scenes? e,g. Miller-19 dataset."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 3
            },
            "confidence": {
                "value": 5
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        }
    ]
}