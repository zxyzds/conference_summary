{
    "id": "Tpjq66xwTq",
    "title": "Real-time design of architectural structures with differentiable mechanics and neural networks",
    "abstract": "Designing mechanically efficient geometry for architectural structures like shells, towers, and bridges is an expensive iterative process.\nExisting techniques for solving such inverse mechanical problems rely on traditional direct optimization methods, which are slow and computationally expensive, limiting iteration speed and design exploration.\nNeural networks would seem to offer a solution, via data-driven amortized optimization for specific design tasks, but they often require extensive fine-tuning and cannot ensure that important design criteria, such as mechanical integrity, are met.\nIn this work, we combine neural networks with a differentiable mechanics simulator to develop a model that accelerates the solution of shape approximation problems for architectural structures modeled as bar systems.\nAs a result, our model offers explicit guarantees to satisfy mechanical constraints while generating designs that match target geometries.\nWe validate our model in two tasks, the design of masonry shells and cable-net towers.\nOur model achieves better accuracy and generalization than fully neural alternatives, and comparable accuracy to direct optimization but in real time, enabling fast and sound design exploration.\nWe further demonstrate the real-world potential of our trained model by deploying it in 3D modeling software and by fabricating a physical prototype.\nOur work opens up new opportunities for accelerated physical design enhanced by neural networks for the built environment.",
    "keywords": [
        "Differentiable physics",
        "mechanical design",
        "physics-in-the-loop neural networks",
        "inverse problems",
        "architectural structures"
    ],
    "primary_area": "applications to physical sciences (physics, chemistry, biology, etc.)",
    "TLDR": "We couple neural networks with a differentiable mechanics simulator to accelerate the solution of shape-matching problems for mechanical design.",
    "creation_date": "2024-09-28",
    "original_date": "2024-10-04",
    "modification_date": "2024-10-13",
    "forum_link": "https://openreview.net/forum?id=Tpjq66xwTq",
    "pdf_link": "https://openreview.net/pdf?id=Tpjq66xwTq",
    "comments": [
        {
            "summary": {
                "value": "The paper introduces a physics-in-the-loop scheme for the design of architectural structures. The authors here use a neural network(MLP) to learn the mapping from the desired structural shape to intermediate mechanical properties (bar stiffnesses) and then use a physics model to generate a physically feasible shape approximating the target.  The authors then apply this method to the design of masonry shells and cable towers,  comparing it with two neural network baselines: one trained to produce physically feasible shapes and the other trained to produce feasible shapes while also ensuring mechanical stability. Results on both these case studies show the proposed approach outperforming both these baselines and being on par with numerical optimization."
            },
            "soundness": {
                "value": 3
            },
            "presentation": {
                "value": 2
            },
            "contribution": {
                "value": 2
            },
            "strengths": {
                "value": "1. The idea of combining physics with ML for architectural design is promising, as it removes the need for generating costly training labels. Instead, the model can learn by integrating the physics model with inexpensive loss functions.\n2. The out-of-distribution performance is also interesting, as it potentially reduces the need for extensive variability in the training data."
            },
            "weaknesses": {
                "value": "1. The case studies provided are relatively simplistic and do not reflect real-world applications. The physics model used is also quite basic, limiting the method's applicability in practical scenarios.\n2. Additionally, as the authors acknowledge, even when trained, the proposed parameterization lacks flexibility and requires retraining whenever the design representation changes."
            },
            "questions": {
                "value": "Overall, the paper is technically sound and proposes an interesting integration of ML and physics. However, there are some concerns as follows:\n\n1. The proposed hybrid approach requires running the physics model during inference, likely increasing training costs. While the authors report inference time, the training time is not provided. Given the limited representational capacity of the network, it must be retrained whenever the design is re-parameterized (a likely scenario during conceptualization). Reporting training times would enable a better assessment of the method\u2019s real-world viability; if training significantly exceeds the duration of several optimizations, direct optimization might be preferable.\n\n2. Similarly, providing training time metrics for the other baselines would help clarify trade-offs and be useful in scenarios where slight accuracy losses are acceptable for performance gains.\n\n3. From Fig.9 , the optimization initialized with the proposed method converges quickly as compared to the other initializations. This leads to an interesting question of how the NN initialized optimizations would perform. This approach would have the benefit of outputting a guaranteed local minima while avoiding the additional physics overhead during training. Including these results would enhance the paper's contribution to the community.\n\n4. The case studies considered here have relatively low DOFs, and the physics relies on a linear FDM. The authors could discuss the viability of this approach for structures where linear FDM is inapplicable or for dynamic scenarios. In such cases\u2014and even when FDM is applicable but the structure has much higher DOFs\u2014would this approach remain feasible?\n\n5. Furthermore, the variation in MLP and PINN inference times is puzzling. Since the input sizes remain constant, one would expect the inference times for the fully trained networks to be similar. Could the authors comment on this discrepancy?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 6
            },
            "confidence": {
                "value": 4
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        {
            "summary": {
                "value": "This manuscript presents an interesting application of AE-type of network architecture to facilitate design and optimization of mechanical structures, mostly in (building) architectural structures. Although the method presented is mostly ad-hoc, the manuscript is well written, the proposed method appears sound, and the potential application is clearly indicated."
            },
            "soundness": {
                "value": 3
            },
            "presentation": {
                "value": 3
            },
            "contribution": {
                "value": 2
            },
            "strengths": {
                "value": "The paper is nicely written, although there are a few small details which could make the paper more understandable for neurips attendees, who may not have prior knowledge on the mechanical structure presented.\n\nThe method presented appears sound. The architecture as shown in Fig 1, leveraging JAX, makes intuitive sense."
            },
            "weaknesses": {
                "value": "Concerns to the paper:\n\n1. Although it is not clearly explained, it appears that each trained model is closely related to the underlying architectural structure (masonry shells or cable-net tower). The question is whether the trained model is generalizable. Even for the shells, if $M$ (number of bars) and $N$ (the number of nodes) change, the model may have to be retrained. It's understandable that this does not reduce the practical value of the proposed method. \n\n2. The runtime measurements have such large variances that they are not meaningful. The author(s) should consider changing the evaluation platform (macOS has many background processes and is not a good platform for benchmarking), and deploy better runtime measurement libraries.\n\n3. In line 200 in Eq. (3), the fact that $\\tau$ can be used to specify minimal stiffness is very interesting. But there are no more follow-up discussion on this topic. \n\n4. Structure of the paper: the decoder is not discussed in the main body of the paper, mostly in the appendices. This need to be fixed. \n\nMinor issues:\nThe terms *mechanical integrity* and *mechanical efficiency*  should be explained early in the paper to make it easier for readers to appreciate the paper."
            },
            "questions": {
                "value": "1. Does the term *fabrication requirements* imply that each bar in the shell examples has to follow additional constraints?\n2. Provide more discussion on the usage of $\\tau$ as pointed out in the previous section\n3. Revise the manuscript to discuss the decoder in the main body of the manuscript.\n\nMinor issues:\n1. Define (or discuss) *mechanical integrity* and *mechanical efficiency* earlier in the manuscript. What do they exactly mean?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 5
            },
            "confidence": {
                "value": 5
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        {
            "summary": {
                "value": "This paper combines neural networks with a differentiable mechanics simulator to develop a model that accelerates the solution of shape approximation problems for architectural structures modeled as bar systems. The proposed approach achieves better accuracy and generalization than the neural network approach and gets comparable accuracy to direct optimization. The two design domains are masonry shells and cable-net towers."
            },
            "soundness": {
                "value": 3
            },
            "presentation": {
                "value": 3
            },
            "contribution": {
                "value": 2
            },
            "strengths": {
                "value": "* The presentation of the approach is nicely structured, and the figures are clean and easy to understand. \n* As an application paper, the work demonstrates a nice implementation of combining a differentiable simulator (as the decoder) with a neural network (as the encoder). The authors also build a physical prototype (Figure 6) based on the output of the approach. It is highly unusual to take this extra step to build a physical prototype and should therefore be commended.\n* The results successfully highlight how using the simulator ensures that the final design results in a pin-jointed structure where the resolved forces at the internal pins are at equilibrium."
            },
            "weaknesses": {
                "value": "* The motivation for this approach is not entirely clear. The design pipeline appears to start with a $\\tilde{\\mathbf{X}}$ and then produces a set of stiffness values. These stiffness values, along with the boundary conditions are then fed to the mechanical simulator to result in the final design (presumably, with the neural network\u2019s stiffness values):\n    * In practice, how does one come up with a design $\\tilde{\\mathbf{X}}$? \n    * How does the simulator only require $\\mathbf{p}$ and $\\mathbf{b}$ for shape prediction? It seems like the simulator is missing information to build a shell with $N$ pins. \n* The cost of amortization (i.e. the number of direct optimization runs to build the data set for training) does not seem to be mentioned as a limitation of the approach. Are there instances in the real world where amortization of the optimization routine would be needed? For example, with a training set, it seems like 100 x direct optimization is required to train the model. This overhead would need at least 100 runs of the proposed approach to make it well-motivated. In a real design pipeline, how often would it be expected to call such a function? It already runs in less than 2 seconds for cable-net towers and around 6 seconds for the masonry shell. Is this this wall-clock time a problem in practice? If so, the paper would benefit from this written explicitly. \n\nMinor\n* $p$ for norm and $\\mathbf{p}$ for loads are a bit confusing in terms of notation.\n* Suggestion: use test-time inference rather than inference for predictions, since inference can also refer to inference over parameters."
            },
            "questions": {
                "value": "* Are the authors going to be releasing the code? As an application paper, it would be beneficial to the community if they were.\n* Does the chosen bar stiffness affect the loading on the design since a stiffer bar might lead to a heavier design? \n* Could you provide further clarification on how the stress direction is determined a-priori? \n* When training the neural network component, how is this loss accounting for permutation invariance with locations, or is there some implicit consistency in the ordering of the pin coordinates.\n* What mechanism is in place to prevent the model providing excessively large stiffness values for all the bars?\n* Could you explain why the masonry shell is modeled as a pin-jointed structure but is then physically built as a shell (and how the two structure types are related)?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 5
            },
            "confidence": {
                "value": 2
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        {
            "summary": {
                "value": "The authors propose an AI-driven design algorithm for architectural structure that can generate mechanically feasible designs for bar systems according to a target geometry. Previous approaches such as pure neural networks cannot guarantee mechanical design requirements. Traditional direct optimization methods can satisfy mechanical criteria, however are inefficient. The authors propose a hybrid scheme, combining neural networks and mechanical simulators to achieve computational efficiency and satisfaction of mechanical constraints. The authors approach consists of a encoder-decoder neural network, where the decoder is replaced by a differentiable mechanical simulator. The encoder structure provides efficiency, while the decoder ensures the design satisfies mechanical constraints. Experimental results show that the authors method achieves satisfactory performance in terms of design and computational efficiency."
            },
            "soundness": {
                "value": 3
            },
            "presentation": {
                "value": 3
            },
            "contribution": {
                "value": 3
            },
            "strengths": {
                "value": "The paper presentation is very good, the motivation is clear, and the method is justified well. Experimental results are extensive. The authors also provide a real life sample designed from their algorithm, which the readers will find very interesting."
            },
            "weaknesses": {
                "value": "The authors could do some revision of the figure. In figure 1, it seems that 3 figures are simultaneously provided to the encoder network, although the text description indicates only one shape is provided. Please take care to avoid such confusion from readers. Also describe the dimension of the matrix K. In figure 3, it is hard to see how the x vectors are being updated. Zooming in and adding some texts will be better for understanding."
            },
            "questions": {
                "value": "See weakness section"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "details_of_ethics_concerns": {
                "value": "N/A"
            },
            "rating": {
                "value": 8
            },
            "confidence": {
                "value": 3
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        }
    ]
}