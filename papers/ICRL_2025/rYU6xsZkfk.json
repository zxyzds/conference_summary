{
    "id": "rYU6xsZkfk",
    "title": "Derivatives Are All You Need For Learning Physical Models",
    "abstract": "Physics-Informed Neural Networks (PINNs) explicitly incorporate Partial Differential Equations (PDEs) into the loss function, thus learning representations that are inherently consistent with the physical system. \nWe claim that it is possible to learn physically consistent models without explicit knowledge about the underlying equations. We propose Derivative Learning (DERL) to model a physical system by learning its partial derivatives, as they contain all the necessary information to determine the system's dynamics. Like in PINNs, we also train the learning model on the initial and boundary conditions of the system. \nWe provide theoretical guarantees that our approach learns the true solution and is consistent with the underlying physical laws, even when using empirical derivatives. DERL outperforms PINNs and other state-of-the-art approaches in tasks ranging from simple dynamical systems to PDEs. Finally, we show that distilling the derivatives enables the transfer of physical information from one model to another. Distillation of higher-order derivatives improves physical consistency. Ultimately, learning and distilling the derivatives of physical systems turns out to be a powerful tool to learn physical models.",
    "keywords": [
        "Physics-informed neural networks",
        "Physics-inspired neural networks",
        "Dynamical systems",
        "Learning physics",
        "Physical systems"
    ],
    "primary_area": "applications to physical sciences (physics, chemistry, biology, etc.)",
    "TLDR": "We propose DERL, a method that learns physical and dynamicals systems by only learning their derivatives. We also show that distilling derivatives enables transfer of physical knowledge across models.",
    "creation_date": "2024-09-27",
    "original_date": "2024-10-04",
    "modification_date": "2024-10-13",
    "forum_link": "https://openreview.net/forum?id=rYU6xsZkfk",
    "pdf_link": "https://openreview.net/pdf?id=rYU6xsZkfk",
    "comments": [
        {
            "title": {
                "value": "Author rebuttal"
            },
            "comment": {
                "value": "Dear reviewer,\n\nto answer the several fundamental issues raised:\n\n1. our method is a supervised method through and through, and we never claimed the opposite. The key insight of our work is indeed that with a supervised method we are able to obtain the same physical consistency of a PINN, if not to improve it. The other tested methods underperform compared to DERL and most works on supervised learning of physical consistency tend to avoid this topic. This supervised approach also provides some advantages, such as theoretical guarantees of convergence to the true solution (which are still in debate for PINNs in general) and more efficiency during training, as proven by the computational times in Table 8. As pointed out by your review, the relationship between partial derivatives is what makes a model consistent and we stress again that DERL can achieve SOTA performance while using separate signals for each derivative, which is novel and remarkable.\n\n2. The solution was known beforehand by us, but it is still unknown to the model. The full solution is calculated to build the task and the data used to train the model, like any supervised learning approach. We intend to learn a solution to the PDE, just like PINNs, but in a supervised manner, while comparing to PINNs to see how our model performs compared to a SOTA model for physical consistency. Additionally, we believe the review completely avoids acknowledging our contribution to transferring physical knowledge and constraints between models, which is in our opinion a novel contribution. The results are encouraging both in terms of transferring successfully physical constraints, as well as improving the teacher model on others.\n\n3. As pointed out in section 2 of our work, we exploit the fact that \u201ca curve can be reconstructed from its derivatives\u201d to learn a solution to a PDE, showing the advantages in terms of physical consistency. We fit a neural network to a curve just like any deep learning solution, from MLPs to LLMs. Furthermore, physical consistency is a key issue in these topics, and that is why we focused on problems described by ODEs/PDEs. Just like PINNs, our model learns to fulfill an equation but it does so without direct access to it.\n\n4. We will try to improve the readability of the section in the next version. However, we want to stress that all the mathematical objects that are present in the theoretical statements and proofs are defined in section 2, such as the loss $L(u,\\hat{u})$, the learned function $u$, and its approximation $\\hat{u}$. Lastly, we want to remind the reviewer that the definition of a limit (or convergence) can be given even without an explicit sequence, as any textbook on calculus would show."
            }
        },
        {
            "title": {
                "value": "Author rebuttal"
            },
            "comment": {
                "value": "Dear reviewer,\n\nwe would like to begin by noting again that our work is not limited to learning dynamical systems and PDEs, as the review summary suggests. Instead, we also mention how our method can be used to transfer physical constraints between models, as we described again in the general comment.\n\nMoving to the specific points:\n\n1. We would like to mention that technical challenges were not mentioned due to the nature and limited space of a conference paper like this one (which according to the provided guidelines in 9 pages). Instead, we focused on the main message of our work, which is the importance of derivatives for the physical consistency of a model. We thank the reviewer for the references, but we stress that none of these examples is applied to physical systems per se, nor do they discuss the physical consistency of the model.\n\n2. About whether OUTL and SOB  are sufficient to learn the function, the answer is yes due to their loss, which directly contains a term for learning u. About PINNs, the ability to learn $u$ solely from the PDE, the initial and the boundary conditions is still up to debate as examples show PINN can deviate from the true solution (see [1], [2] and our work for the continuity equation experiment in section 4.3). Theoretically, there is no guarantee that PINNs work for all kinds of PDEs.\n\n3. The specific way to obtain the numerical signals for u(x,y,t) depends on the specific experiment. In our work, we explained how this was obtained in each case. In some cases, they were calculated directly from the analytical solutions, in other cases they were obtained from a numerical method. Finally, DERL worked even using empirical derivatives starting from grid values of u or an interpolation of it.\n\n3. Yes, the Jacobian and Hessian matrices scale up as noted, requiring an incremental use of resources. Nevertheless, the computational times required to perform such operations (available in table 8) are similar to the ones of OUTL, that is supervised learning of u, lower than SOB, and much lower compared to PINNs. Therefore, computational resources are not an issue for this model realistically.\n\n4. The different metrics in the tables are related to the different nature of the experiments. We will try to make them more unified where possible.\n\n5. We would like to remind the reviewer that extending Sobolev learning with more hyperparameters and terms was out of the scope of our work, which actually aims to send a different message: the importance of learning the derivatives and their sufficiency, as well as the ability of DERL to transfer physical constraints.\n\n6. Finally, we would like to remind the reviewer that the official author guidelines from ICLR suggest writing the paper within 9 pages, to allow for additions in the final versions. We complied with these limits provided by the organizers and we believe it would be unfair to penalize our work for having followed the guidelines.\n\n[1] Sun, Luning et al. \u201cSurrogate modeling for fluid flows based on physics-constrained deep learning without simulation data.\u201d Computer Methods in Applied Mechanics and Engineering (2019)\n\n[2] Wang, Sifan et al. \u201cUnderstanding and Mitigating Gradient Flow Pathologies in Physics-Informed Neural Networks.\u201d SIAM J. Sci. Comput. 43 (2021): A3055-A3081."
            }
        },
        {
            "title": {
                "value": "Author rebuttal"
            },
            "comment": {
                "value": "Dear reviewer,\n\nwe would like to emphasize that, while DERL has access to information on the true solution of the problem for the training datapoints, all supervised learning methods for physical systems do. Unlike DERL however, other supervised methods fail to learn the physical consistency of the solution and drastically underperform PINNs. This can be seen in part by the results of OUTL, which knows perfectly $u$ but fails in the PDE residual loss. \n\n\nIt is not obvious that learning the partial derivatives automatically leads to a high physical consistency. In this sense, PINNs have an advantage since they know and learn the full description of the problem in terms of the PDE. DERL, like other supervised learning methods, does not but it is still capable of performing comparable or even better than PINN.\nFinally, when true analytical derivatives are not available, empirical derivatives can be used. To this end, in the paper we performed experiments with partial derivatives calculated empirically based solely on $u$ while still obtaining state-of-the-art performance on physical consistency. \n\nComing down to the questions:\n\n1. Yes, that is a typo, the correct loss is 0.030950. Thanks for spotting this.\n\n2. The architecture of the student model is the same as the teacher one, as briefly described at the beginning of sections 4.5.1 and 4.5.2. We will make it more evident in a subsequent version of the paper.\n\n3. Yes, we can produce these values and put it in the paper, although this deviates from the true message of this part of the work. HNN and LNN will outperform all the other methods in most metrics since they do not predict entire trajectories but rely on external solvers. Instead, what we most cared about was the performance on generalizing to new initial conditions, at which DERL outperforms even these SOTA methods for the pendulum dynamics."
            }
        },
        {
            "title": {
                "value": "Author rebuttal"
            },
            "comment": {
                "value": "Dear reviewer,\n\n1. As described in the general comment, our main focus was to learn physical systems starting from available data in a supervised way and never claimed the opposite. In particular, we focused on improving the physical consistency of the model, which was compared to a SOTA model such as the PINN with its own PDE consistency metric, showing better performance in general. First, we stress that our main message is novel: derivatives are sufficient to learn the physical constraints of a system with PINN-like performance and we are the first to show that both theoretically and experimentally. Second, we would like to emphasize again one part of our work that was not acknowledged in the review: the ability to transfer such constraints from a trained model to a student one. We are the first to employ derivative distillation to perform this task, achieving an excellent physical consistency and improving other constraints of the teacher model. We would like our work to be evaluated for its full potential, while this review seems to ignore this part entirely.\n\n2. To better understand our point and work it is necessary to shift the focus away from learning a system given the definition alone. In these terms, there are plenty of data-driven supervised methods to learn physics in literature, with many recent examples that are published every year. We described many of them in the related works section and reported a few in our general comments. Many of these methods learn the solution directly from its data and lack physical consistency, which was the key achievement for DERL: an improved physical consistency, similar to PINNs, while learning the solution as well with great performance. Furthermore, DERL works even when the analytical derivative is not available, using an empirical derivative calculated from $u$ or an interpolation of it. Lastly, we do not believe our contribution to be \u201ctrivial\u201d, especially since, to the best of our knowledge, we are the first to employ and consider physical knowledge transfer between models. This would be of great impact in research, allowing for an incremental definition of physical models that can satisfy multiple constraints, increasing efficiency and learnability, as proven by our results in section 4.5.1, where distilling the physical knowledge allowed for better performance on boundary conditions. Of course, we remain available for further discussion in case the reviewer is aware of similar approaches in the literature.\n\n\nConcerning the question of why Sobolev learning underperforms our method, we attribute this effect mainly to two facts:\n\n1. Loss gradients produced by Sobolev learning contain information about both the function $u$ and its derivative, leading to a gradient direction that is less focused on physical consistency such as the one from DERL.\n\n2. Furthermore, learning directly $u$ can deteriorate the performance of the model in learning the physical constraints in terms of PDE residual loss. OUTL is an extreme case for this since it only learns u and fails in most cases to learn the physics of the problem.\n\nTherefore, we attribute the worse performance to a combination of these two effects: a more complex gradient direction, which pushes the model to mediate between derivatives and $u$, and too much information on $u$ directly. Lastly, we stress that this analysis of the effects of the different loss terms for the physical consistency of the model is completely novel."
            }
        },
        {
            "title": {
                "value": "Overall rebuttal by Authors"
            },
            "comment": {
                "value": "We thank the reviewers for their comments and suggestions and hope to engage in a fruitful discussion during this next phase. Here we provide answers to the most important points raised by the reviewers. We also reply to each reviewer individually.\n\nFirst, we would like to point out that the transfer of physical knowledge between models through derivative distillation, one of the key contributions of our work, was largely disregarded in the reviews. We highlighted the novelty and relevance of derivative distillation in the introduction and methodology. The related experiments in Section 4.5 led to very promising results. We believe derivative distillation to be both a novel and high-impact contribution to future research, as it allows for an incremental definition and training of physical models, improving efficiency and the learnability of constraints by composing more than one model. Unfortunately, the reviews did not comment on this point and the scores did not seem to take derivative distillation into consideration.\n\nFrom the reviews, it seems that the supervised nature of our method is a disadvantage. We do not understand why this should be the case. Although the comparison with PINN may have been misleading for some reviewers, we never claimed our method to be unsupervised. Furthermore, there are many methods in the literature, even recently published, that define and create new supervised methods to learn physical systems: NeuralODEs [1], Hamiltonian Neural Networks [2], Fourier Neural Operators [3] are just some examples of supervised methods with different architectures published in recent years, as we also report in our related works section (3). Our approach adopts the supervised learning paradigm and outperforms other supervised methods. And even PINN, in many cases.\n\nWe also would like to stress that our method is not specific to a PDE but it is rather of general application (as shown by our experiments on different PDEs). It only requires automatic differentiation to be employed. We tested it against PINNs, as they are the state-of-the-art for physical consistency, with an MLP backbone. However, DERL works also on other architectures, as we showed by using it with the Neural Conservation Laws architecture [4] in section 4.5.2.\n\n[1] Chen, Tian Qi et al. \u201cNeural Ordinary Differential Equations.\u201d Neural Information Processing Systems (2018).\n\n[2] Greydanus, Sam et al. \u201cHamiltonian Neural Networks.\u201d Neural Information Processing Systems (2019).\n\n[3] Li, Zong-Yi et al. \u201cFourier Neural Operator for Parametric Partial Differential Equations.\u201d ArXiv abs/2010.08895 (2020).\n\n[4] Richter-Powell, Jack et al. \u201cNeural Conservation Laws: A Divergence-Free Perspective.\u201d ArXiv abs/2210.01741 (2022)."
            }
        },
        {
            "summary": {
                "value": "This paper shows that it is possible to \"learn\" the solution to a particular PDE from the boundary/initial conditions as well as labeled data for the partial derivatives at collocations points in the space-time domain. In essence, this is an alternative approach to supervised learning of the solution, but using the gradients of the solution field rather than the solution itself."
            },
            "soundness": {
                "value": 3
            },
            "presentation": {
                "value": 2
            },
            "contribution": {
                "value": 1
            },
            "strengths": {
                "value": "The paper is well-presented and structured."
            },
            "weaknesses": {
                "value": "1. Although this paper is technically sound, my first major concern is that it is misleading in terms of what the proposed method achieves. For example, sentences such as \"We claim that it is possible to learn physically consistent models without explicit knowledge about the underlying equations\" or \"DERL outperforms PINNs and other state-of-the-art approaches\" make it sound like the paper proposes a novel method to solve PDEs, while that is NOT the case at all. What this paper proposes is a supervised learning approach for a particular PDE, where instead of training the network on the values of the solution, the network is instead trained on the gradients of the solution.\n2. I fail to see the utility of this method in practice: it can't be used to calculate a PDE solution without a priori knowledge on the gradients of the solution. Thus, this paper's real contribution seems rather trivial to me, and it would be more suitable for a workshop rather than ICLR."
            },
            "questions": {
                "value": "It is surprising that the proposed method outperforms Sobolev learning, which trains the network using both the solution itself as well as its gradients. It seems that more data should make learning easier, especially when we have labeled data for the direct outputs of the neural network. Can you explain why you are getting such results?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 3
            },
            "confidence": {
                "value": 4
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        {
            "summary": {
                "value": "This paper proposes a method for learning solutions to ODEs/PDEs by training with information of the derivatives of the solution, called DERL. The method using a loss term consisting of the error in the derivatives and the error in the initial/boundary conditions. DERL is compared to PINN, OUTL, and SOB on several differential equation problems. Additional, the method is applied to learning the solution from a \"teacher\" model."
            },
            "soundness": {
                "value": 2
            },
            "presentation": {
                "value": 2
            },
            "contribution": {
                "value": 2
            },
            "strengths": {
                "value": "The theorems are sound, other than some notational issues. The experiments are extensive and emperically, the proposed model performs best in most cases."
            },
            "weaknesses": {
                "value": "The biggest concern is that the comparison between DERL and PINN is unfair because PINN does not have access to any information about the true solution within the domain. It only has access to the initial/boundary data and the PDE. DERL on the other hand has access to information about the true solution. It is access the derivative of the solution rather than the solution itself, but the PINN does not have any information about the true solution within the domain. So the results of DERL learning better than PINN are predictable. \nAnother weakness is that all of the comparisons are against other methods that are not the most recent. Most of the other methods are from 2019 or later. It would be good to see comparisons to more recent methods."
            },
            "questions": {
                "value": "* In Table 3, the PINN loss is listed as 030950. Is this supposed to be 0.030950?\n* For the PINN distillation, you list the model architecture for the teacher model. Is it the same architecture for the student model? Or is the student model a smaller model?\n* You have figures comparing DERL to HNN and LNN. Do you have loss infomation for HNN and LNN similar to Table 2 to compare?"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 3
            },
            "confidence": {
                "value": 4
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        {
            "summary": {
                "value": "The paper primarily addresses a critical question in the training of neural PDE solvers: what should the learning objective be, or, in other words, how should the loss function be defined. Previous work has commonly utilized either the discrepancy between predicted and true state values or the residual form of the PDE itself as the loss. In contrast, this paper proposes a new loss function based on the derivatives of the state with respect to the time variable \\(t\\) and spatial variable \\(x\\) as supervisory signals. The authors also theoretically demonstrate that gradient-based supervision alone is sufficient and necessary for convergence toward the target solution. Extensive numerical experiments are conducted to validate the proposed method\u2019s effectiveness.\n\n**[-]** The main content of the paper centers around introducing the authors' perspective and framework\u2014specifically, the IMPORTANCE OF DERIVATIVE LEARNING. However, it lacks a detailed discussion of challenges encountered during this process and the proposed solutions. Thus, the primary contribution lies in the perspective itself, asserting that derivative-based supervisory signals are both important and novel, which is the key selling point of the paper. However, from my viewpoint, this perspective is not entirely novel, as related approaches have been explored in previous work. Here are a few examples:\n\n- [1] Sitzmann, Vincent, et al. \"Implicit neural representations with periodic activation functions.\" Advances in neural information processing systems 33 (2020): 7462-7473.\n    - Research has shown that first- or second-order gradients alone can be effective for image supervision and has examined the associated challenges, such as activation function selection.\n- [2] Li, Chongchong, et al. \"Gradient information matters in policy optimization by back-propagating through model.\" International Conference on Learning Representations. 2022.\n  -  In reinforcement learning model training (closely related to the ODE scenarios in this paper), gradient information has been shown to be crucial for downstream control tasks, with solutions also proposed to address this.\n- [3] D'Oro, Pierluca, and Wojciech Ja\u015bkowski. \"How to learn a useful critic? model-based action-gradient-estimator policy optimization.\" Advances in Neural Information Processing Systems 33 (2020): 313-324.\n  -  In the learning of value functions in reinforcement learning, since downstream policy learning relies on the gradient of the value function (similar to how PDE or ODE gradients are essential for model evolution in this paper), gradient-based supervision is incorporated into value function learning.\n\nThese are merely indicative examples, suggesting that this topic has been explored in deep learning literature. The authors should demonstrate awareness of such research to avoid reinventing the wheel.\n\n**[-]** Moving to the specific research content, Definition 2.1 attempts to prove the sufficiency of the proposed loss, but it does not clarify whether methods like PINN, OTL, or SOB are also sufficient, nor does it establish any clear superiority of the proposed loss over these methods.\n\n**[-]** If we are given a PDE with an analytical form along with initial and boundary conditions, how would the proposed method obtain supervisory signals? Would it still require numerical methods to generate data \\(u(x, y, t)\\), followed by gradient estimation via interpolation?\n\n**[-]** For a system with a 3D input (x, y, t) and a 2D output (u, v), first-order gradient information actually forms a Jacobian matrix (2x3). Would the second-order Hessian matrix then be a higher-dimensional matrix? What computational resources would be required to estimate such derivative information?\n\n**[-]** Regarding the experiments, could the authors clarify why the metrics in Tables 2, 3, 4, 5, and 6 differ so greatly ( Perhaps  Table 3 includes the three more intuitively understandable metrics)?\n\n**[-]** The proposed method does not perform well in Tables 4 and 5, and its performance in Table 7 is comparable to that of SOB (which aligns with my earlier concerns about the theoretical part). I reasonably suspect that, if given appropriate weight adjustments, the SOB method would be at least as effective as the proposed loss, given that the proposed loss is a subset of the SOB method\u2019s loss function. The paper provides no evidence (or intuitive argument) to suggest that adding a reasonable constraint to a loss would have adverse effects.\n\n**[-]** The paper's presentation could be improved. Too many important details are placed in the appendix, leaving the main text with almost no information about the algorithm and experimental specifics\u2014such as how the loss function is implemented. There is nearly one page of unused space in the main text, which could be used to provide these crucial details."
            },
            "soundness": {
                "value": 2
            },
            "presentation": {
                "value": 2
            },
            "contribution": {
                "value": 2
            },
            "strengths": {
                "value": "see above"
            },
            "weaknesses": {
                "value": "see above"
            },
            "questions": {
                "value": "see above"
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 3
            },
            "confidence": {
                "value": 4
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        },
        {
            "summary": {
                "value": "The paper proposes training neural networks by fitting its derivatives to the derivatives of a data set. The authors evaluate this method on physical systems, where the derivatives are obtained from the solution trajectories of differential equations. \n\nI see several fundamental issues with this work:\n1) The method is presented as \u2018physically consistent\u2019, like physics informed neural networks (PINNs), because it uses partial derivatives. Later, it is argued that the authors\u2019 method is easier to train because the network\u2019s partial derivatives are compared to \u2018individual targets instead of being entangled together\u2019. The loss of PINNs incorporates the relationship between partial derivatives; this is what makes them physically consistent. To me, the proposed method appears to be a supervised method through and through.\n2) The method is presented as a solution method to physical systems (see for instance in the conclusion: \u2018We showed theoretically and experimentally that our method successfully learns the solution to a problem and remains consistent with its physical constraints, \u2026\u2019). What was actually done in the experiments is that the solution was known beforehand, either determined by classical numerical methods or it was a system with a known analytical solution. Then a neural network was fitted to that solution. While it is true that a solution was learned in the literal sense, the statement is misleading, as it indicates their method is a solution method for differential equations, just like PINNs. But more importantly, it raises the question what the method\u2019s intended purpose then is.\n3) The role of physics in this method is not really clear. As explained, the proposed technique is a method to fit a neural network to a given curve, not a solution technique. The authors argue that this is a consequence of the uniqueness theorem from the theory of ordinary differential equations, where dx/dt = f(x,t). What the method is actually based on is a simplified case, where the derivatives are known beforehand, corresponding to dx/dt = f(t) and within the scope of the well-known fundamental theorem of calculus. That a curve can be reconstructed from its derivatives is not a specific property of dynamical systems but only a property of a differentiable curve. For this reason, I would also recommend to present this work more related to Sobolev training than to physical systems and PINNs. The connection to Sobolev training should be clear from the beginning due to their strong similarities.\n4) In section 2.1, theoretical analysis, the statements of the mathematical theorems are hard to follow as some of the quantities are not declared, or used in a way that does not make sense. For instance, it is not clear what the arrow in theorem 2.1 precisely means as there are no sequences that could somehow be connected to convergence of some sort. Consequentially, the proof also makes no sense to me."
            },
            "soundness": {
                "value": 1
            },
            "presentation": {
                "value": 2
            },
            "contribution": {
                "value": 1
            },
            "strengths": {
                "value": "See above."
            },
            "weaknesses": {
                "value": "See above"
            },
            "questions": {
                "value": "See above."
            },
            "flag_for_ethics_review": {
                "value": [
                    "No ethics review needed."
                ]
            },
            "rating": {
                "value": 1
            },
            "confidence": {
                "value": 3
            },
            "code_of_conduct": {
                "value": "Yes"
            }
        }
    ]
}